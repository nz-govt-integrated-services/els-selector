{"version":3,"sources":["components/layer/layer.jsx","components/external-link/external-link.jsx","components/option/option.jsx","components/utils/idSafeString.js","components/result/result.jsx","components/decision-tree/decision-tree.jsx","components/comparison-cell/comparison-cell.jsx","components/comparison-table/comparison-table.jsx","components/navbar/navbar.jsx","components/ece-attribute-icons/ages-icon.jsx","components/ece-attribute-icons/cost-icon.jsx","components/ece-attribute-icons/language-icon.jsx","components/ece-attribute-icons/number-of-centres-icon.jsx","components/ece-attribute-icons/parent-involvement-icon.jsx","components/ece-attribute-icons/session-length-icon.jsx","components/ece-attribute-icons/teacher-qualifications-icon.jsx","components/ece-attribute/ece-attribute.jsx","components/ece-type/ece-type.jsx","pages/combined.jsx","pages/decision-tree.jsx","pages/table.jsx","pages/home.jsx","components/process-item-preview/process-item-preview.jsx","components/process-item/process-item.jsx","components/process-group/process-group.jsx","pages/process.jsx","App.js","serviceWorker.js","index.js"],"names":["Layer","props","useState","isExpanded","setIsExpanded","moreInfoClasses","classNames","iconClasses","removeWhitespaces","string","replace","className","text","dangerouslySetInnerHTML","__html","question","question_details","moreInfo","preview","type","aria-expanded","onClick","fullText","answers","map","answer","index","key","id","layerCount","name","value","htmlFor","defaultProps","ExternalLink","linkClasses","class","href","title","target","rel","style","Option","heading","conditions","length","condition","links","link","idSafeString","Result","options","option","DecisionTree","selectedAnswers","setSelectedAnswers","setLayerCount","calculatorResultRef","useRef","calculatorRowRef","showResults","setShowResults","useDebouncedCallback","delayShowResults","handleClick","layerLevel","newSelectedAnswers","slice","results","filter","result","a","useEffect","whichToScroll","scrollOption","window","innerWidth","smoothscroll","polyfill","current","scrollIntoView","behaviour","block","data","isLastItem","subquestion","ref","aria-live","aria-atomic","resultHeading","join","lastUpdated","ComparisonCell","mappedValue","true","color","icon","faCheckCircle","false","faTimesCircle","partial","faMinusCircle","unknown","faQuestionCircle","notes","ComparisonTable","typeOrder","categoryMemberIds","categories","category","members","flat","typesWithNoCategory","Object","keys","types","x","includes","concat","colspan","attributes","attribute","values","NavBar","isNavCollapsed","setIsNavCollapsed","data-toggle","data-target","aria-controls","aria-label","to","AgesIcon","inRange","number","range","from","startAge","always","sometimes","CostIcon","costLevel","LanguageIcon","languages","language","faComment","proportion","NumberOfCentresIcon","ParentInvolvementIcon","minimum","involvementLevel","minimum_percent","SessionLengthIcon","getSectorPath","y","outerDiameter","a1","a2","degtorad","Math","PI","cr","cos","sin","startDegreeForHour","hour","endDegreeForHour","width","height","startHour","d","TeacherQualificationsIcon","qualificationLevel","minimum_percent_qualified","EceAttribute","mappedType","ages","cost","EceType","CombinedPage","KINDERGARTEN_DATA","KOHANGA_DATA","PLAYGROUP_DATA","DECISIONTREE_DATA","TABLE_DATA","DecisionTreePage","TablePage","HomePage","ProcessItemPreview","active","blurb","ProcessItem","lists","list","items","item","ProcessGroup","activeItem","setActiveItem","itemIndex","checklists","checklist","faGreaterThan","ProcessPage","CHECKLIST_DATA","App","basename","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.885fdcb7.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nexport default function Layer(props) {\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  const toggleMoreInfo = () => {\n    setIsExpanded(!isExpanded);\n  };\n  const moreInfoClasses = classNames(\n    'more-info__content',\n    'pl-5',\n    isExpanded ? 'block' : 'hidden'\n  );\n  const iconClasses = classNames(\n    'fas',\n    'pr-2',\n    isExpanded ? 'fa-minus' : 'fa-plus'\n  );\n\n  const removeWhitespaces = (string) => string.replace(/ /g, '');\n\n  return (\n    <fieldset className=\"pt-4\">\n      {\n        props.text\n        && (\n          <div className=\"pb-5 text-section\" dangerouslySetInnerHTML={{ __html: props.text }} />\n        )\n      }\n      {\n        props.question && (\n          <div>\n            <legend className=\"w-auto d-inline h3\">{props.question}</legend>\n          </div>\n        )\n      }\n      {\n        props.question_details && (\n          <div className=\"pb-5 question-details-section\" dangerouslySetInnerHTML={{ __html: props.question_details }} />\n        )\n      }\n      <div className=\"more-info-section\">\n        { props.moreInfo.preview\n          && (\n            <button\n              type=\"button\"\n              className=\"more-info__button ml-5 py-3\"\n              aria-expanded={isExpanded}\n              onClick={() => toggleMoreInfo()}\n            >\n              <i className={iconClasses} />\n              { props.moreInfo.preview }\n            </button>\n          )}\n        <div className={moreInfoClasses}>\n          <p dangerouslySetInnerHTML={{ __html: props.moreInfo.fullText }} />\n        </div>\n      </div>\n      <div className=\"row\">\n        {\n          props.answers.map((answer, index) => (\n            <div className=\"position-relative col\" key={answer.answer}>\n              <input\n                type=\"radio\"\n                id={`${removeWhitespaces(answer.answer)}-${props.layerCount}-${props.index}`}\n                name={props.layerCount}\n                value={index}\n                onClick={() => props.onClick(answer, props.index)}\n                className=\"answer\"\n              />\n              <label htmlFor={`${removeWhitespaces(answer.answer)}-${props.layerCount}-${props.index}`} className=\"answer__label\">\n                <span className=\"answer__inner\">\n                  {answer.answer}\n                </span>\n              </label>\n              <span className=\"radio-custom\" />\n            </div>\n          ))\n        }\n      </div>\n    </fieldset>\n  );\n}\n\nLayer.defaultProps = {\n  question: '',\n  text: '',\n  question_details: '',\n  moreInfo: {}\n};\n\nLayer.propTypes = {\n  question: PropTypes.string,\n  moreInfo: PropTypes.shape({\n    preview: PropTypes.string,\n    fullText: PropTypes.string\n  }),\n  text: PropTypes.string,\n  question_details: PropTypes.string,\n  answers: PropTypes.arrayOf(PropTypes.object).isRequired,\n  index: PropTypes.number.isRequired,\n  onClick: PropTypes.func.isRequired,\n  layerCount: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport './external-link.scss';\n\nexport default function ExternalLink(props) {\n  const linkClasses = classNames(\n    'external-link',\n    props.class\n  );\n  return (\n    <span>\n      {' '}\n      <a\n        href={props.href}\n        className={linkClasses}\n        title=\"Open external link\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        style={{\"whiteSpace\": \"nowrap\"}}\n      >\n        {props.text}\n      </a>\n      <span className=\"sr-only\">\n        (external link)\n      </span>\n      {' '}\n    </span>\n  );\n}\n\nExternalLink.defaultProps = {\n  class: ''\n};\n\nExternalLink.propTypes = {\n  href: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  class: PropTypes.string\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ExternalLink from '../external-link/external-link';\n\nexport default function Option(props) {\n  return (\n    <div className=\"option\" id={props.id}>\n      {\n        props.heading && (\n          <h3 className=\"option__heading\">{props.heading}</h3>\n        )\n      }\n      {\n        props.text && (\n          <p className=\"option__text\" dangerouslySetInnerHTML={{ __html: props.text }} />\n        )\n      }\n      {\n        props.conditions.length >= 1 && (\n          <ul className=\"option__conditions\">\n            {\n              props.conditions.map((condition, index) => (\n                <li key={index}>\n                  <p dangerouslySetInnerHTML={{ __html: condition }} />\n                </li>\n              ))\n            }\n          </ul>\n        )\n      }\n      {\n        props.links.length >= 1\n        && (\n          <ul className=\"option__links\">\n            {props.links.map((link, index) => (\n              <li key={index}>\n                <p>\n                  <ExternalLink href={link.href} text={link.text} />\n                </p>\n              </li>\n            ))}\n          </ul>\n        )\n      }\n    </div>\n  );\n}\n\nOption.defaultProps = {\n  heading: '',\n  text: '',\n  links: [],\n  conditions: [],\n  id: ''\n};\n\nOption.propTypes = {\n  heading: PropTypes.string,\n  text: PropTypes.string,\n  links: PropTypes.arrayOf(PropTypes.object),\n  conditions: PropTypes.arrayOf(PropTypes.string),\n  id: PropTypes.string\n};\n","export default function idSafeString(string) {\n  return string.replace(/[ ()']/g, '');\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ExternalLink from '../external-link/external-link';\nimport Option from '../option/option';\nimport idSafeString from '../utils/idSafeString';\n\nexport default function Result(props) {\n  return (\n    <div className=\"result\" id={`result-${props.id}`}>\n      {\n        props.text && (\n          <p dangerouslySetInnerHTML={{ __html: props.text }} />\n        )\n      }\n      {\n        props.conditions.length >= 1\n        && (\n          <div className=\"result__conditions\">\n            <ul>\n              {props.conditions.map((condition, index) => (\n                <li key={index}>\n                  <p dangerouslySetInnerHTML={{ __html: condition }} />\n                </li>\n              ))}\n            </ul>\n          </div>\n        )\n      }\n      {\n        props.links.length >= 1\n        && (\n          <ul className=\"result__links\">\n            {props.links.map((link, index) => (\n              <li key={index}>\n                <p>\n                  <ExternalLink href={link.href} text={link.text} />\n                </p>\n              </li>\n            ))}\n          </ul>\n        )\n      }\n      {\n        props.options.length >= 1 && (\n          <div className=\"result__options\">\n            {props.options.map((option) => (\n              <Option\n                heading={option.heading}\n                text={option.text}\n                links={option.links}\n                conditions={option.conditions}\n                id={`result-option-${idSafeString(option.heading)}`}\n              />\n            ))}\n          </div>\n        )\n      }\n    </div>\n  );\n}\n\nResult.defaultProps = {\n  links: [],\n  conditions: [],\n  options: [],\n  text: '',\n  id: ''\n};\n\nResult.propTypes = {\n  text: PropTypes.string,\n  links: PropTypes.arrayOf(PropTypes.object),\n  conditions: PropTypes.arrayOf(PropTypes.string),\n  options: PropTypes.arrayOf(PropTypes.object),\n  id: PropTypes.string\n};\n","import React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDebouncedCallback } from 'use-debounce';\nimport smoothscroll from 'smoothscroll-polyfill';\n\nimport Layer from '../layer/layer';\nimport Result from '../result/result';\nimport idSafeString from '../utils/idSafeString';\n\nimport './decision-tree.scss';\n\nexport default function DecisionTree(props) {\n  const [selectedAnswers, setSelectedAnswers] = useState([]);\n  const [layerCount, setLayerCount] = useState(1);\n  const calculatorResultRef = useRef(null);\n  const calculatorRowRef = useRef(null);\n  const [showResults, setShowResults] = useState(false);\n  const [delayShowResults] = useDebouncedCallback(\n    () => {\n      setShowResults(true);\n    },\n    600\n  );\n\n  const handleClick = (answer, layerLevel) => {\n    setLayerCount(layerCount + 1);\n    let newSelectedAnswers = selectedAnswers;\n    if (selectedAnswers.length >= (layerLevel + 1)) {\n      // if this is selecting an answer at an earlier level than what we've already selected\n      // cut out the later level answers and results\n      newSelectedAnswers = selectedAnswers.slice(0, layerLevel);\n      setShowResults(false);\n    }\n    setSelectedAnswers([...newSelectedAnswers, { answer, layerCount }]);\n  };\n\n  const results = selectedAnswers.filter((answer) => (answer.answer.result))\n    .map((a) => a.answer.result);\n\n  if (selectedAnswers.length >= 1 && results.length >= 1) {\n    delayShowResults();\n  }\n\n  const scrollToSection = () => {\n    let whichToScroll = null;\n    let scrollOption = window.innerWidth < 576 ? 'center' : 'nearest';\n    smoothscroll.polyfill();\n\n    if (showResults) {\n      whichToScroll = calculatorResultRef;\n      if (window.innerWidth < 576) scrollOption = 'start';\n    } else if (selectedAnswers.length >= 1) {\n      whichToScroll = calculatorRowRef;\n    }\n    if (whichToScroll !== null && whichToScroll.current !== null) {\n      whichToScroll.current.scrollIntoView({ behaviour: 'smooth', block: scrollOption });\n    }\n  };\n\n  useEffect(scrollToSection, [selectedAnswers, showResults]);\n\n  const concatenateAnswers = () => {\n    const answers = selectedAnswers.map((a) => idSafeString(a.answer.answer));\n    return answers.join('__');\n  };\n\n  return (\n    <div className=\"row decision-tree-wrapper\">\n      <section className=\"col-lg-12 page-section\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <Layer\n                question={props.data.question}\n                answers={props.data.answers}\n                moreInfo={props.data.moreInfo}\n                index={0}\n                onClick={handleClick}\n                layerCount={0}\n                key=\"0\"\n              />\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {\n        selectedAnswers.map((answer, index) => {\n          const isLastItem = index + 1 === selectedAnswers.length;\n          return answer.answer.subquestion\n              && (\n                <section className=\"col-lg-12 page-section\" key={answer.layerCount}>\n                  <div className=\"container\">\n                    <div className=\"row\">\n                      <div className=\"col-12\" ref={isLastItem ? calculatorRowRef : null}>\n                        <Layer\n                          question={answer.answer.subquestion.question}\n                          answers={answer.answer.subquestion.answers}\n                          index={index + 1}\n                          layerCount={answer.layerCount}\n                          onClick={handleClick}\n                          moreInfo={answer.answer.subquestion.moreInfo}\n                          text={answer.answer.subquestion.text}\n                          question_details={answer.answer.subquestion.question_details}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </section>\n              );\n        })\n      }\n\n      <section className=\"col-lg-12 mt-4 pt-4\" aria-live=\"polite\" aria-atomic=\"true\">\n        {\n          showResults && (\n            <div className=\"container\" ref={calculatorResultRef}>\n              {\n                props.resultHeading && (\n                  <h2>{ props.resultHeading }</h2>\n                )\n              }\n              {\n                results.map((result, index) => (\n                  <div className=\"row pb-4\" key={index}>\n                    <div className=\"col-12 mb-4\">\n                      <Result\n                        text={result.text}\n                        links={result.links}\n                        conditions={result.conditions}\n                        options={result.options}\n                        id={concatenateAnswers()}\n                      />\n                    </div>\n                  </div>\n                ))\n              }\n            </div>\n          )\n        }\n      </section>\n      {\n        props.lastUpdated && (\n          <section className=\"col-lg-12 mb-4\">\n            <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"col-12 mb-4\">\n                  <p>\n                    Last updated:\n                    { props.lastUpdated }\n                  </p>\n                </div>\n              </div>\n            </div>\n          </section>\n        )\n      }\n    </div>\n  );\n}\n\nDecisionTree.defaultProps = {\n  lastUpdated: '',\n  resultHeading: ''\n};\n\nDecisionTree.propTypes = {\n  data: PropTypes.shape({\n    question: PropTypes.string,\n    answers: PropTypes.array.isRequired,\n    moreInfo: PropTypes.object\n  }).isRequired,\n  lastUpdated: PropTypes.string,\n  resultHeading: PropTypes.string\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ExternalLink from '../external-link/external-link';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheckCircle, faTimesCircle, faQuestionCircle, faMinusCircle } from '@fortawesome/free-solid-svg-icons'\n\nexport default function ComparisonCell(props) {\n  const valueMap = {\n    true: {color: \"green\", icon: faCheckCircle},\n    false: {color: \"red\", icon: faTimesCircle},\n    partial: {color: \"yellow\", icon: faMinusCircle},\n    unknown: {color: \"orange\", icon: faQuestionCircle}\n  }\n  const mappedValue = valueMap[props.value]\n\n  return (\n    <td>\n      <div className=\"d-flex flex-column align-items-center\">\n        {\n          props.value && (\n            <FontAwesomeIcon icon={ mappedValue.icon } color={`var(--${mappedValue.color})`} className=\"mb-1\" />\n          )\n        }\n        {\n          props.notes && (\n            <span className=\"small text-center\">{props.notes}</span>\n          )\n        }\n        {\n          props.links && (\n            <div className=\"small\">\n              {\n                props.links.map((link, index) => (\n                  <ExternalLink href={ link.href } text={ link.text } />\n                ))\n              }\n            </div>\n          )\n        }\n      </div>\n    </td>\n  )\n}\n\nComparisonCell.defaultProps = {\n  notes: '',\n  value: '',\n  links: []\n};\n\nComparisonCell.propTypes = {\n  value: PropTypes.string,\n  notes: PropTypes.string,\n  links: PropTypes.array\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ComparisonCell from '../comparison-cell/comparison-cell'\n\nexport default function ComparisonTable(props) {\n  const typeOrder = () => {\n    const categoryMemberIds = props.data.categories.map((category) => (category.members)).flat();\n    const allTypeIds = Object.keys(props.data.types);\n    const typesWithNoCategory = allTypeIds.filter(x => !categoryMemberIds.includes(x));\n    return categoryMemberIds.concat(typesWithNoCategory)\n  }\n\n  return (\n    <div className=\"table-responsive\">\n      <table className=\"table table-bordered border-0 table-hover\">\n        <thead>\n          <tr>\n            <th className=\"border-0\" />\n            {\n              props.data.categories.map((category, index) => (\n                <th colspan={category.members.length} className=\"text-center\">\n                  {category.name}\n                </th>\n              ))\n            }\n          </tr>\n          <tr>\n            <th />\n            {\n              typeOrder().map((type, index) => (\n                <th className=\"text-center\">\n                  { props.data.types[type].name }\n                </th>\n              ))\n            }\n          </tr>\n        </thead>\n        <tbody>\n          {\n            props.data.attributes.map((attribute, index) => (\n              <tr>\n                <td className=\"font-weight-bold\">\n                  {attribute.name}\n                </td>\n                {\n                  typeOrder().map((type, index) => (\n                    <ComparisonCell\n                      value = { attribute.values[type] && attribute.values[type].value }\n                      notes = { attribute.values[type] && attribute.values[type].notes }\n                      links = { attribute.values[type] && attribute.values[type].links }\n                    />\n                  ))\n                }\n              </tr>\n            ))\n          }\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nComparisonTable.propTypes = {\n  data: PropTypes.shape({\n    types: PropTypes.object.isRequired,\n    attributes: PropTypes.array.isRequired,\n    categories: PropTypes.array.isRequired\n  }).isRequired\n};\n","import React, { useState } from 'react';\n\nimport { Link } from \"react-router-dom\";\n\nexport default function NavBar(props) {\n  const [isNavCollapsed, setIsNavCollapsed] = useState(true);\n  const handleNavCollapse = () => setIsNavCollapsed(!isNavCollapsed);\n\n  return(\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-impendingstorm--deep\">\n      <a className=\"navbar-brand\" href=\"#\">Start Well</a>\n      <button className=\"navbar-toggler\"\n              type=\"button\"\n              data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\"\n              aria-controls=\"navbarSupportedContent\"\n              aria-label=\"Toggle navigation\"\n              aria-expanded={!isNavCollapsed ? true : false}\n              onClick={handleNavCollapse}>\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n\n      <div className={`${isNavCollapsed ? 'collapse' : ''} navbar-collapse`} id=\"navbarSupportedContent\">\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item active\">\n            <a className=\"nav-link\" href=\"#\">Home <span className=\"sr-only\">(current)</span></a>\n          </li>\n          <li className=\"nav-item\">\n            <Link to=\"/process\" className=\"nav-link\">Process</Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to=\"/decision-tree\" className=\"nav-link\">Decision tree</Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to=\"/table\" className=\"nav-link\">Table</Link>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  )\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './ages-icon.scss';\n\nexport default function AgesIcon(props) {\n  const inRange = (number, range) => {\n    return(range && (range.from <= number) && (range.to >= number))\n  }\n\n  return (\n    <div class=\"ages-circle__container\">\n      {\n        [0,1,2,3,4,5,6].map(startAge => (\n          <span\n            class={`ages-circle ages-circle--${inRange(startAge, props.data.always) ? 'always' : (inRange(startAge, props.data.sometimes) ? 'sometimes' : 'never')}`}\n          >\n          </span>\n        ))\n      }\n    </div>\n  )\n}\n\nAgesIcon.defaultProps = {\n  data: {}\n};\n\nAgesIcon.propTypes = {\n  data: PropTypes.shape({\n    always: PropTypes.shape({\n      from: PropTypes.number,\n      to: PropTypes.number\n    }),\n    sometimes: PropTypes.shape({\n      from: PropTypes.number,\n      to: PropTypes.number\n    })\n  })\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './cost-icon.scss';\n\nexport default function CostIcon(props) {\n  const inRange = (number, range) => {\n    return(range && (range.from <= number) && (range.to >= number))\n  }\n\n  return (\n    <div class=\"cost-icon__container\">\n      {\n        [5,4,3,2,1].map(costLevel => (\n          <span\n            class={`cost-icon cost-icon--${inRange(costLevel, props.data.always) ? 'always' : (inRange(costLevel, props.data.sometimes) ? 'sometimes' : 'never')}`}\n          >\n          </span>\n        ))\n      }\n    </div>\n  )\n}\n\nCostIcon.defaultProps = {\n  always: {},\n  sometimes: {}\n};\n\n// rating of 0-5\nCostIcon.propTypes = {\n  data: PropTypes.shape({\n    always: PropTypes.shape({\n      from: PropTypes.number,\n      to: PropTypes.number\n    }),\n    sometimes: PropTypes.shape({\n      from: PropTypes.number,\n      to: PropTypes.number\n    })\n  })\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './language-icon.scss';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faComment } from '@fortawesome/free-solid-svg-icons'\n\nexport default function LanguageIcon(props) {\n  const baseSize = 3;\n  return (\n    <div class=\"language-icon__container\">\n      {\n        props.data.languages.map((language, index) => (\n          <div class={`language-icon language-icon--${index}`}>\n            <span class=\"language-icon__bubble\">\n              <FontAwesomeIcon icon={faComment} style={{\"font-size\": `${(baseSize*language.proportion)}em`}} />\n            </span>\n            <span class=\"language-icon__name\">\n              {language.name}\n            </span>\n          </div>\n        ))\n      }\n    </div>\n  )\n}\n\nLanguageIcon.propTypes = {\n  data: PropTypes.shape({\n    languages: PropTypes.array\n  }).isRequired\n};\n\n// [{ \"name\": \"nz-mi\", \"proportion\": \"0.8\" }, { \"name\": \"nz-en\", \"proportion\": \"0.2\" }]\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './number-of-centres-icon.scss';\n\nexport default function NumberOfCentresIcon(props) {\n  return (\n    <div class=\"number-of-centres-icon\">\n      <span class=\"number-of-centres-icon__number\">\n        {props.data.number}\n      </span>\n    </div>\n  )\n}\n\nNumberOfCentresIcon.propTypes = {\n  data: PropTypes.shape({\n    number: PropTypes.string\n  }).isRequired\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './parent-involvement-icon.scss';\n\nexport default function ParentInvolvementIcon(props) {\n  const inRange = (number, minimum) => {\n    return(minimum && minimum >= number)\n  }\n\n  return (\n    <div class=\"involvement-icon__container\">\n      {\n        [100,80,60,40,20,0].map(involvementLevel => (\n          <span\n            class={`involvement-icon involvement-icon--${inRange(involvementLevel, props.data.always.minimum_percent) ? 'always' : (inRange(involvementLevel, props.data.sometimes.minimum_percent) ? 'sometimes' : 'never')}`}\n          >\n          </span>\n        ))\n      }\n    </div>\n  )\n}\n\nParentInvolvementIcon.propTypes = {\n  data: PropTypes.shape({\n    always: PropTypes.shape({\n      minimum_percent: PropTypes.number\n    }),\n    sometimes: PropTypes.shape({\n      minimum_percent: PropTypes.number\n    })\n  }).isRequired\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './session-length-icon.scss';\n\nexport default function SessionLengthIcon(props) {\n  const outerDiameter = 70;\n\n  const getSectorPath = (x, y, outerDiameter, a1, a2) => {\n    const degtorad = Math.PI / 180;\n    const halfOuterDiameter = outerDiameter / 2;\n    const cr = halfOuterDiameter - 5;\n    const cx1 = (Math.cos(degtorad * a2) * cr) + x;\n    const cy1 = (-Math.sin(degtorad * a2) * cr) + y;\n    const cx2 = (Math.cos(degtorad * a1) * cr) + x;\n    const cy2 = (-Math.sin(degtorad * a1) * cr) + y;\n\n    return \"M\" + x + \" \" + y + \" \" + cx1 + \" \" + cy1 + \" A\" + cr + \" \" + cr + \" 0 0 1 \" + cx2 + \" \" + cy2 + \"Z\";\n  }\n\n  const startDegreeForHour = (hour) => (\n    60 - (hour * (360/12))\n  )\n\n  const endDegreeForHour = (hour) => (\n    startDegreeForHour(hour) + (360/12)\n  )\n\n  const inRange = (number, range) => {\n    return(range && (range.from <= number) && (range.to >= number))\n  }\n\n  return (\n    <div>\n      <svg width={outerDiameter} height={outerDiameter}>\n      {\n        [0,1,2,3,4,5,6,7,8,9,10,11].map(startHour => (\n          <path\n            d={getSectorPath(outerDiameter / 2, outerDiameter / 2, outerDiameter, startDegreeForHour(startHour), endDegreeForHour(startHour))}\n            class={`session-length-icon session-length-icon--${inRange(startHour, props.data.always) ? 'always' : (inRange(startHour, props.data.sometimes) ? 'sometimes' : 'never')}`}\n            id={`session-${startHour}-${startDegreeForHour(startHour)}__${endDegreeForHour(startHour)}`}\n            />\n        ))\n      }\n      </svg>\n    </div>\n  )\n}\n\nSessionLengthIcon.propTypes = {\n  data: PropTypes.shape({\n    always: PropTypes.shape({\n      from: PropTypes.number,\n      to: PropTypes.number\n    }),\n    sometimes: PropTypes.shape({\n      from: PropTypes.number,\n      to: PropTypes.number\n    })\n  }).isRequired\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './teacher-qualifications-icon.scss';\n\nexport default function TeacherQualificationsIcon(props) {\n  return (\n    <div className=\"teacher-qualifications-icon__container\">\n      {\n        [100,90,80,70,60,50,40,30,20,10,0].map(qualificationLevel => (\n          <span\n            className={`teacher-qualifications-icon teacher-qualifications-icon--${(qualificationLevel <= props.data.always.minimum_percent_qualified) ? 'always' : (props.data.sometimes && qualificationLevel <= props.data.sometimes.minimum_percent_qualified ? 'sometimes' : 'never')}`}>\n          </span>\n        ))\n      }\n    </div>\n  )\n}\n\nTeacherQualificationsIcon.propTypes = {\n  data: PropTypes.shape({\n    always: PropTypes.shape({\n      minimum_percent_qualified: PropTypes.number\n    }),\n    sometimes: PropTypes.shape({\n      minimum_percent_qualified: PropTypes.number\n    })\n  }).isRequired\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport AgesIcon from '../ece-attribute-icons/ages-icon';\nimport CostIcon from '../ece-attribute-icons/cost-icon';\nimport LanguageIcon from '../ece-attribute-icons/language-icon';\nimport NumberOfCentresIcon from '../ece-attribute-icons/number-of-centres-icon';\nimport ParentInvolvementIcon from '../ece-attribute-icons/parent-involvement-icon';\nimport SessionLengthIcon from '../ece-attribute-icons/session-length-icon';\nimport TeacherQualificationsIcon from '../ece-attribute-icons/teacher-qualifications-icon';\n\nexport default function EceAttribute(props) {\n  const typeMap = {\n    ages: {heading: \"Ages\", icon: AgesIcon},\n    cost: {heading: \"Cost\", icon: CostIcon},\n    language: {heading: \"Language\", icon: LanguageIcon},\n    \"number-of-centres\": {heading: \"Number of centres in New Zealand\", icon: NumberOfCentresIcon},\n    \"parent-involvement\": {heading: \"Expectations of you and your whānau\", icon: ParentInvolvementIcon},\n    \"session-length\": {heading: \"Session length\", icon: SessionLengthIcon},\n    \"teacher-qualifications\": {heading: \"Teacher qualifications\", icon: TeacherQualificationsIcon}\n  }\n\n  const mappedType = typeMap[props.type]\n\n  return (\n    <div class=\"row mb-3\">\n      <div class=\"col-1 d-flex justify-content-center\">\n        { <mappedType.icon data={props.data} /> }\n      </div>\n      <div class=\"col-11\">\n        <h3>{ mappedType.heading }</h3>\n        <p>{ props.text }</p>\n      </div>\n    </div>\n  )\n}\n\nEceAttribute.defaultProps = {\n  heading: '',\n  text: ''\n};\n\nEceAttribute.propTypes = {\n  type: PropTypes.string.isRequired,\n  data: PropTypes.object.isRequired,\n  text: PropTypes.string\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport EceAttribute from '../ece-attribute/ece-attribute';\n\nexport default function EceType(props) {\n  return (\n    <div>\n      <h2>{props.data.title}</h2>\n      <p>{props.data.text}</p>\n      <div>\n        {\n          props.data.attributes.map((attribute, index) => (\n            <EceAttribute type={attribute.type}\n                          data={attribute.data}\n                          text={attribute.text}\n                          key={`${props.title}-${attribute.type}`}/>\n          ))\n        }\n      </div>\n    </div>\n  )\n}\n\nEceType.propTypes = {\n  data: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    text: PropTypes.string,\n    attributes: PropTypes.array,\n    links: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\n","import React from 'react';\nimport DecisionTree from '../components/decision-tree/decision-tree';\nimport ComparisonTable from '../components/comparison-table/comparison-table';\nimport NavBar from '../components/navbar/navbar';\nimport EceType from '../components/ece-type/ece-type';\n\nimport DECISIONTREE_DATA from '../data/decision-tree.json';\nimport TABLE_DATA from '../data/table-data.json';\nimport KINDERGARTEN_DATA from '../data/ece-types/kindergarten.json';\nimport KOHANGA_DATA from '../data/ece-types/kohanga.json';\nimport PLAYGROUP_DATA from '../data/ece-types/playgroup.json';\n\nfunction CombinedPage() {\n  return (\n    <div>\n      <NavBar />\n      <div className=\"container\">\n        <EceType data={KINDERGARTEN_DATA} />\n        <EceType data={KOHANGA_DATA} />\n        <EceType data={PLAYGROUP_DATA} />\n          <DecisionTree\n                  data={DECISIONTREE_DATA}\n                  resultHeading={\"Based on your results...\"}\n                />\n          <div className=\"row\">\n            <div className=\"col-lg-12\">\n              <ComparisonTable\n              data={TABLE_DATA}\n              />\n            </div>\n          </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CombinedPage;\n","import React from 'react';\nimport DecisionTree from '../components/decision-tree/decision-tree';\nimport NavBar from '../components/navbar/navbar';\n\nimport DECISIONTREE_DATA from '../data/decision-tree.json';\n\nfunction DecisionTreePage() {\n  return (\n    <div>\n      <NavBar />\n      <div className=\"container py-4\">\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <h1>What type of early learning service is right for you?</h1>\n            <p>Lorem ipsum dolor sit amet...</p>\n          </div>\n        </div>\n        <DecisionTree\n          data={DECISIONTREE_DATA}\n          resultHeading={\"Based on your results...\"}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default DecisionTreePage;\n","import React from 'react';\nimport ComparisonTable from '../components/comparison-table/comparison-table';\nimport NavBar from '../components/navbar/navbar';\n\nimport TABLE_DATA from '../data/table-data.json';\n\nfunction TablePage() {\n  return (\n    <div>\n      <NavBar />\n      <div className=\"container-responsive px-4 py-2 mt-4 overflow-hidden\">\n        <div className=\"row pb-2\">\n          <div className=\"col-lg-12\">\n            <h1 className=\"mb-4\">Comparison table</h1>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-lg-12\">\n            <ComparisonTable\n            data={TABLE_DATA}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default TablePage;\n","import React from 'react';\nimport NavBar from '../components/navbar/navbar';\nimport { Link } from \"react-router-dom\";\n\nfunction HomePage() {\n  return (\n    <div>\n      <NavBar />\n      <div className=\"container\">\n        <div className=\"row mt-4 pt-4\">\n          <div className=\"col-lg-4 py-4\">\n            <Link to=\"/process\" className=\"link-not-blue\">\n              <div className=\"card\">\n                <h4 className=\"card-header\">How to find an early learning service</h4>\n                <div className=\"card-body\">Not sure where to start?</div>\n              </div>\n            </Link>\n          </div>\n          <div className=\"col-lg-4 py-4\">\n            <Link to=\"/decision-tree\" className=\"link-not-blue\">\n              <div className=\"card\">\n                <h4 className=\"card-header\">What's the right type of early learning service for you?</h4>\n                <div className=\"card-body\">Find out which type of centre you should go to with our quiz.</div>\n              </div>\n            </Link>\n          </div>\n          <div className=\"col-lg-4 py-4\">\n            <Link to=\"/table\" className=\"link-not-blue\">\n              <div className=\"card\">\n                <h4 className=\"card-header\">Compare types of early learning service</h4>\n                <div className=\"card-body\">Not sure what the difference between a playcentre and a playgroup is?</div>\n              </div>\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default HomePage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './process-item-preview.scss';\n\nexport default function ProcessItemPreview(props) {\n  return (\n    <div className={`card process-item-preview process-item-preview--${props.index} ${props.active && 'process-item-preview--active'}`} onClick={ () => props.onClick(props.index) }>\n      <div className=\"card-header\">\n        <h4>{props.data.title}</h4>\n      </div>\n      <div className=\"card-body\">\n        <p>{props.data.blurb}</p>\n      </div>\n    </div>\n  )\n}\n\nProcessItemPreview.propTypes = {\n  data: PropTypes.shape({\n    title: PropTypes.string,\n    blurb: PropTypes.string,\n    lists: PropTypes.array,\n    links: PropTypes.array\n  }).isRequired,\n  index: PropTypes.number.isRequired,\n  onClick: PropTypes.func.isRequired,\n  active: PropTypes.bool.isRequired\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './process-item.scss';\n\nexport default function ProcessItem(props) {\n  return (\n    <div className=\"border p-4 process-item\">\n      {\n        props.data.lists.map((list, index) => (\n          <div key={ list.title }>\n            <h4>{list.title}</h4>\n            <ul>\n              {\n                list.items.map((item, index) => (\n                  <li key={ item }>{ item }</li>\n                ))\n              }\n            </ul>\n          </div>\n        ))\n      }\n    </div>\n  )\n}\n\nProcessItem.propTypes = {\n  data: PropTypes.shape({\n    title: PropTypes.string,\n    blurb: PropTypes.string,\n    lists: PropTypes.array,\n    links: PropTypes.array\n  }).isRequired\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport ProcessItemPreview from '../process-item-preview/process-item-preview';\nimport ProcessItem from '../process-item/process-item';\n\nimport './process-group.scss';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faGreaterThan } from '@fortawesome/free-solid-svg-icons'\n\nexport default function ProcessGroup(props) {\n  const [activeItem, setActiveItem] = useState(null);\n\n  const handleClick = (itemIndex) => {\n    setActiveItem(itemIndex);\n  };\n\n  return (\n    <div>\n      <div className=\"row align-items-stretch\">\n        {\n          props.checklists.map((checklist, index) => (\n            <div className=\"col checklist\" key={ checklist.title }>\n              <ProcessItemPreview\n                data={ checklist }\n                index={ index }\n                onClick={ handleClick }\n                active={ index === activeItem }\n              />\n              {\n                index !== (props.checklists.length - 1) && (\n                  <div class=\"checklist__arrow\">\n                    <FontAwesomeIcon icon={faGreaterThan} />\n                  </div>\n                )\n              }\n            </div>\n          ))\n        }\n      </div>\n      {\n        (activeItem !== null) && (\n          <div className=\"row\">\n            {\n              <div className=\"col-12\">\n                <ProcessItem data={ props.checklists[activeItem] } />\n              </div>\n            }\n          </div>\n        )\n      }\n    </div>\n  )\n}\n\nProcessGroup.propTypes = {\n  checklists: PropTypes.array.isRequired\n};\n","import React from 'react';\nimport ProcessGroup from '../components/process-group/process-group';\nimport NavBar from '../components/navbar/navbar';\n\nimport CHECKLIST_DATA from '../data/checklist-data.json';\n\nfunction ProcessPage() {\n  return (\n    <div>\n      <NavBar />\n      <div className=\"container mt-4 pt-4\">\n        <div className=\"row\">\n          <div className=\"col-12\">\n          </div>\n        </div>\n        <ProcessGroup checklists={ CHECKLIST_DATA } />\n      </div>\n    </div>\n  );\n}\n\nexport default ProcessPage;\n","import React from 'react';\n\nimport { HashRouter, Route } from \"react-router-dom\";\n\nimport CombinedPage from './pages/combined'\nimport DecisionTreePage from './pages/decision-tree'\nimport TablePage from './pages/table'\nimport HomePage from './pages/home'\nimport ProcessPage from './pages/process'\n\nimport './App.scss';\n\nfunction App() {\n  return (\n    <HashRouter basename='/'>\n      <Route exact path=\"/\" component={HomePage} />\n      <Route path=\"/combined\" component={CombinedPage} />\n      <Route path=\"/decision-tree\" component={DecisionTreePage} />\n      <Route path=\"/table\" component={TablePage} />\n      <Route path=\"/process\" component={ProcessPage} />\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}