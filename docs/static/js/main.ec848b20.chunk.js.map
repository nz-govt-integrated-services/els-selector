{"version":3,"sources":["components/layer/layer.jsx","components/link/link.jsx","components/option/option.jsx","components/utils/idSafeString.js","components/result/result.jsx","components/decision-tree/decision-tree.jsx","components/comparison-cell/comparison-cell.jsx","components/comparison-table/comparison-table.jsx","components/navbar/navbar.jsx","pages/combined.jsx","pages/decision-tree.jsx","pages/table.jsx","pages/home.jsx","components/checklist/checklist.jsx","components/process-item/process-item.jsx","components/process-group/process-group.jsx","pages/process.jsx","App.js","serviceWorker.js","index.js"],"names":["Layer","props","useState","isExpanded","setIsExpanded","moreInfoClasses","classNames","iconClasses","removeWhitespaces","string","replace","class","text","className","dangerouslySetInnerHTML","__html","question","question_details","moreInfo","preview","type","aria-expanded","onClick","fullText","answers","map","answer","index","id","layerCount","name","value","htmlFor","defaultProps","Link","linkClasses","href","title","target","rel","style","icon","faExternalLinkAlt","Option","heading","conditions","length","condition","key","links","link","idSafeString","Result","options","option","DecisionTree","selectedAnswers","setSelectedAnswers","setLayerCount","calculatorResultRef","useRef","calculatorRowRef","showResults","setShowResults","useDebouncedCallback","delayShowResults","handleClick","layerLevel","newSelectedAnswers","slice","results","filter","result","a","useEffect","whichToScroll","scrollOption","window","innerWidth","smoothscroll","polyfill","current","scrollIntoView","behaviour","block","data","isLastItem","subquestion","ref","aria-live","aria-atomic","resultHeading","join","lastUpdated","ComparisonCell","mappedValue","true","color","faCheckCircle","false","faTimesCircle","partial","faMinusCircle","unknown","faQuestionCircle","notes","ComparisonTable","typeOrder","categoryMemberIds","categories","category","members","flat","typesWithNoCategory","Object","keys","types","x","includes","concat","colspan","attributes","attribute","values","NavBar","data-toggle","data-target","aria-controls","aria-label","to","CombinedPage","DECISIONTREE_DATA","TABLE_DATA","DecisionTreePage","TablePage","HomePage","Checklist","active","blurb","ProcessItem","lists","list","items","item","ProcessGroup","activeChecklist","setActiveChecklist","checklistIndex","checklists","checklist","ProcessPage","CHECKLIST_DATA","App","basename","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ec848b20.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nexport default function Layer(props) {\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  const toggleMoreInfo = () => {\n    setIsExpanded(!isExpanded);\n  };\n  const moreInfoClasses = classNames(\n    'more-info__content',\n    'pl-5',\n    isExpanded ? 'block' : 'hidden'\n  );\n  const iconClasses = classNames(\n    'fas',\n    'pr-2',\n    isExpanded ? 'fa-minus' : 'fa-plus'\n  );\n\n  const removeWhitespaces = (string) => string.replace(/ /g, '');\n\n  return (\n    <fieldset class=\"pt-4\">\n      {\n        props.text\n        && (\n          <div className=\"pb-5 text-section\" dangerouslySetInnerHTML={{ __html: props.text }} />\n        )\n      }\n      {\n        props.question && (\n          <div>\n            <legend className=\"w-auto d-inline h3\">{props.question}</legend>\n          </div>\n        )\n      }\n      {\n        props.question_details && (\n          <div className=\"pb-5 question-details-section\" dangerouslySetInnerHTML={{ __html: props.question_details }} />\n        )\n      }\n      <div className=\"more-info-section\">\n        { props.moreInfo.preview\n          && (\n            <button\n              type=\"button\"\n              className=\"more-info__button ml-5 py-3\"\n              aria-expanded={isExpanded}\n              onClick={() => toggleMoreInfo()}\n            >\n              <i className={iconClasses} />\n              { props.moreInfo.preview }\n            </button>\n          )}\n        <div className={moreInfoClasses}>\n          <p dangerouslySetInnerHTML={{ __html: props.moreInfo.fullText }} />\n        </div>\n      </div>\n      <div className=\"row\">\n        {\n          props.answers.map((answer, index) => (\n            <div className=\"position-relative col-xs-12 col-sm-6 col-lg-3 mb-2\">\n              <input\n                type=\"radio\"\n                id={`${removeWhitespaces(answer.answer)}-${props.layerCount}-${props.index}`}\n                name={props.layerCount}\n                value={index}\n                onClick={() => props.onClick(answer, props.index)}\n                className=\"answer\"\n              />\n              <label htmlFor={`${removeWhitespaces(answer.answer)}-${props.layerCount}-${props.index}`} className=\"answer__label\">\n                <span className=\"answer__inner\">\n                  {answer.answer}\n                </span>\n              </label>\n              <span className=\"radio-custom\" />\n            </div>\n          ))\n        }\n      </div>\n    </fieldset>\n  );\n}\n\nLayer.defaultProps = {\n  question: '',\n  text: '',\n  question_details: '',\n  moreInfo: {}\n};\n\nLayer.propTypes = {\n  question: PropTypes.string,\n  moreInfo: PropTypes.shape({\n    preview: PropTypes.string.isRequired,\n    fullText: PropTypes.string.isRequired\n  }),\n  text: PropTypes.string,\n  question_details: PropTypes.string,\n  answers: PropTypes.arrayOf(PropTypes.object).isRequired,\n  index: PropTypes.number.isRequired,\n  onClick: PropTypes.func.isRequired,\n  layerCount: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons'\n\nexport default function Link(props) {\n  const linkClasses = classNames(\n    'external',\n    props.class\n  );\n  return (\n    <span>\n      {' '}\n      <a\n        href={props.href}\n        className={linkClasses}\n        title=\"Open external link\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        style={{\"white-space\": \"nowrap\"}}\n      >\n        {props.text}\n        <FontAwesomeIcon icon={ faExternalLinkAlt } className=\"ml-1\" />\n      </a>\n      <span className=\"sr-only\">\n        (external link)\n      </span>\n      {' '}\n    </span>\n  );\n}\n\nLink.defaultProps = {\n  class: ''\n};\n\nLink.propTypes = {\n  href: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  class: PropTypes.string\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Link from '../link/link';\n\nexport default function Option(props) {\n  return (\n    <div className=\"option\" id={props.id}>\n      {\n        props.heading && (\n          <h3 className=\"option__heading\">{props.heading}</h3>\n        )\n      }\n      {\n        props.text && (\n          <p className=\"option__text\" dangerouslySetInnerHTML={{ __html: props.text }} />\n        )\n      }\n      {\n        props.conditions.length >= 1 && (\n          <ul className=\"option__conditions\">\n            {\n              props.conditions.map((condition, index) => (\n                <li key={index}>\n                  <p dangerouslySetInnerHTML={{ __html: condition }} />\n                </li>\n              ))\n            }\n          </ul>\n        )\n      }\n      {\n        props.links.length >= 1\n        && (\n          <ul className=\"option__links\">\n            {props.links.map((link, index) => (\n              <li key={index}>\n                <p>\n                  <Link href={link.href} text={link.text} />\n                </p>\n              </li>\n            ))}\n          </ul>\n        )\n      }\n    </div>\n  );\n}\n\nOption.defaultProps = {\n  heading: '',\n  text: '',\n  links: [],\n  conditions: [],\n  id: ''\n};\n\nOption.propTypes = {\n  heading: PropTypes.string,\n  text: PropTypes.string,\n  links: PropTypes.arrayOf(PropTypes.object),\n  conditions: PropTypes.arrayOf(PropTypes.string),\n  id: PropTypes.string\n};\n","export default function idSafeString(string) {\n  return string.replace(/[ ()']/g, '');\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Link from '../link/link';\nimport Option from '../option/option';\nimport idSafeString from '../utils/idSafeString';\n\nexport default function Result(props) {\n  return (\n    <div className=\"result\" id={`result-${props.id}`}>\n      {\n        props.text && (\n          <p dangerouslySetInnerHTML={{ __html: props.text }} />\n        )\n      }\n      {\n        props.conditions.length >= 1\n        && (\n          <div className=\"result__conditions\">\n            <ul>\n              {props.conditions.map((condition, index) => (\n                <li key={index}>\n                  <p dangerouslySetInnerHTML={{ __html: condition }} />\n                </li>\n              ))}\n            </ul>\n          </div>\n        )\n      }\n      {\n        props.links.length >= 1\n        && (\n          <ul className=\"result__links\">\n            {props.links.map((link, index) => (\n              <li key={index}>\n                <p>\n                  <Link href={link.href} text={link.text} />\n                </p>\n              </li>\n            ))}\n          </ul>\n        )\n      }\n      {\n        props.options.length >= 1 && (\n          <div className=\"result__options\">\n            {props.options.map((option) => (\n              <Option\n                heading={option.heading}\n                text={option.text}\n                links={option.links}\n                conditions={option.conditions}\n                id={`result-option-${idSafeString(option.heading)}`}\n              />\n            ))}\n          </div>\n        )\n      }\n    </div>\n  );\n}\n\nResult.defaultProps = {\n  links: [],\n  conditions: [],\n  options: [],\n  text: '',\n  id: ''\n};\n\nResult.propTypes = {\n  text: PropTypes.string,\n  links: PropTypes.arrayOf(PropTypes.object),\n  conditions: PropTypes.arrayOf(PropTypes.string),\n  options: PropTypes.arrayOf(PropTypes.object),\n  id: PropTypes.string\n};\n","import React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDebouncedCallback } from 'use-debounce';\nimport smoothscroll from 'smoothscroll-polyfill';\n\nimport Layer from '../layer/layer';\nimport Result from '../result/result';\nimport idSafeString from '../utils/idSafeString';\n\nexport default function DecisionTree(props) {\n  const [selectedAnswers, setSelectedAnswers] = useState([]);\n  const [layerCount, setLayerCount] = useState(1);\n  const calculatorResultRef = useRef(null);\n  const calculatorRowRef = useRef(null);\n  const [showResults, setShowResults] = useState(false);\n  const [delayShowResults] = useDebouncedCallback(\n    () => {\n      setShowResults(true);\n    },\n    600\n  );\n\n  const handleClick = (answer, layerLevel) => {\n    setLayerCount(layerCount + 1);\n    let newSelectedAnswers = selectedAnswers;\n    if (selectedAnswers.length >= (layerLevel + 1)) {\n      // if this is selecting an answer at an earlier level than what we've already selected\n      // cut out the later level answers and results\n      newSelectedAnswers = selectedAnswers.slice(0, layerLevel);\n      setShowResults(false);\n    }\n    setSelectedAnswers([...newSelectedAnswers, { answer, layerCount }]);\n  };\n\n  const results = selectedAnswers.filter((answer) => (answer.answer.result))\n    .map((a) => a.answer.result);\n\n  if (selectedAnswers.length >= 1 && results.length >= 1) {\n    delayShowResults();\n  }\n\n  const scrollToSection = () => {\n    let whichToScroll = null;\n    let scrollOption = window.innerWidth < 576 ? 'center' : 'nearest';\n    smoothscroll.polyfill();\n\n    if (showResults) {\n      whichToScroll = calculatorResultRef;\n      if (window.innerWidth < 576) scrollOption = 'start';\n    } else if (selectedAnswers.length >= 1) {\n      whichToScroll = calculatorRowRef;\n    }\n    if (whichToScroll !== null && whichToScroll.current !== null) {\n      whichToScroll.current.scrollIntoView({ behaviour: 'smooth', block: scrollOption });\n    }\n  };\n\n  useEffect(scrollToSection, [selectedAnswers, showResults]);\n\n  const concatenateAnswers = () => {\n    const answers = selectedAnswers.map((a) => idSafeString(a.answer.answer));\n    return answers.join('__');\n  };\n\n  return (\n    <div className=\"row decision-tree-wrapper\">\n      <section className=\"col-lg-12 page-section\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <Layer\n                question={props.data.question}\n                answers={props.data.answers}\n                moreInfo={props.data.moreInfo}\n                index={0}\n                onClick={handleClick}\n                layerCount={0}\n                key=\"0\"\n              />\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {\n        selectedAnswers.map((answer, index) => {\n          const isLastItem = index + 1 === selectedAnswers.length;\n          return answer.answer.subquestion\n              && (\n                <section className=\"col-lg-12 page-section\" key={answer.layerCount}>\n                  <div className=\"container\">\n                    <div className=\"row\">\n                      <div className=\"col-12\" ref={isLastItem ? calculatorRowRef : null}>\n                        <Layer\n                          question={answer.answer.subquestion.question}\n                          answers={answer.answer.subquestion.answers}\n                          index={index + 1}\n                          layerCount={answer.layerCount}\n                          onClick={handleClick}\n                          moreInfo={answer.answer.subquestion.moreInfo}\n                          text={answer.answer.subquestion.text}\n                          question_details={answer.answer.subquestion.question_details}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </section>\n              );\n        })\n      }\n\n      <section className=\"col-lg-12 mt-4 pt-4\" aria-live=\"polite\" aria-atomic=\"true\">\n        {\n          showResults && (\n            <div className=\"container\" ref={calculatorResultRef}>\n              {\n                props.resultHeading && (\n                  <h2>{ props.resultHeading }</h2>\n                )\n              }\n              {\n                results.map((result, index) => (\n                  <div className=\"row pb-4\" key={index}>\n                    <div className=\"col-12 mb-4\">\n                      <Result\n                        text={result.text}\n                        links={result.links}\n                        conditions={result.conditions}\n                        options={result.options}\n                        id={concatenateAnswers()}\n                      />\n                    </div>\n                  </div>\n                ))\n              }\n            </div>\n          )\n        }\n      </section>\n      {\n        props.lastUpdated && (\n          <section className=\"col-lg-12 mb-4\">\n            <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"col-12 mb-4\">\n                  <p>\n                    Last updated:\n                    { props.lastUpdated }\n                  </p>\n                </div>\n              </div>\n            </div>\n          </section>\n        )\n      }\n    </div>\n  );\n}\n\nDecisionTree.defaultProps = {\n  lastUpdated: '',\n  resultHeading: ''\n};\n\nDecisionTree.propTypes = {\n  data: PropTypes.shape({\n    question: PropTypes.string,\n    answers: PropTypes.array.isRequired,\n    moreInfo: PropTypes.object\n  }).isRequired,\n  lastUpdated: PropTypes.string,\n  resultHeading: PropTypes.string\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Link from '../link/link';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheckCircle, faTimesCircle, faQuestionCircle, faMinusCircle } from '@fortawesome/free-solid-svg-icons'\n\nexport default function ComparisonCell(props) {\n  const valueMap = {\n    true: {color: \"green\", icon: faCheckCircle},\n    false: {color: \"red\", icon: faTimesCircle},\n    partial: {color: \"yellow\", icon: faMinusCircle},\n    unknown: {color: \"orange\", icon: faQuestionCircle}\n  }\n  const mappedValue = valueMap[props.value]\n\n  return (\n    <td>\n      <div class=\"d-flex flex-column align-items-center\">\n        {\n          props.value && (\n            <FontAwesomeIcon icon={ mappedValue.icon } color={`var(--${mappedValue.color})`} className=\"mb-1\" />\n          )\n        }\n        {\n          props.notes && (\n            <span class=\"small text-center\">{props.notes}</span>\n          )\n        }\n        {\n          props.links && (\n            <div className=\"small\">\n              {\n                props.links.map((link, index) => (\n                  <Link href={ link.href } text={ link.text } />\n                ))\n              }\n            </div>\n          )\n        }\n      </div>\n    </td>\n  )\n}\n\nComparisonCell.defaultProps = {\n  notes: '',\n  value: '',\n  links: []\n};\n\nComparisonCell.propTypes = {\n  value: PropTypes.string,\n  notes: PropTypes.string,\n  links: PropTypes.array\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ComparisonCell from '../comparison-cell/comparison-cell'\n\nexport default function ComparisonTable(props) {\n  const typeOrder = () => {\n    const categoryMemberIds = props.data.categories.map((category) => (category.members)).flat();\n    const allTypeIds = Object.keys(props.data.types);\n    const typesWithNoCategory = allTypeIds.filter(x => !categoryMemberIds.includes(x));\n    return categoryMemberIds.concat(typesWithNoCategory)\n  }\n\n  return (\n    <div class=\"table-responsive\">\n      <table className=\"table table-bordered border-0 table-hover\">\n        <thead>\n          <tr>\n            <th className=\"border-0\" />\n            {\n              props.data.categories.map((category, index) => (\n                <th colspan={category.members.length} className=\"text-center\">\n                  {category.name}\n                </th>\n              ))\n            }\n          </tr>\n          <tr>\n            <th />\n            {\n              typeOrder().map((type, index) => (\n                <th className=\"text-center\">\n                  { props.data.types[type].name }\n                </th>\n              ))\n            }\n          </tr>\n        </thead>\n        <tbody>\n          {\n            props.data.attributes.map((attribute, index) => (\n              <tr>\n                <td className=\"font-weight-bold\">\n                  {attribute.name}\n                </td>\n                {\n                  typeOrder().map((type, index) => (\n                    <ComparisonCell\n                      value = { attribute.values[type] && attribute.values[type].value }\n                      notes = { attribute.values[type] && attribute.values[type].notes }\n                      links = { attribute.values[type] && attribute.values[type].links }\n                    />\n                  ))\n                }\n              </tr>\n            ))\n          }\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nComparisonTable.propTypes = {\n  data: PropTypes.shape({\n    types: PropTypes.object.isRequired,\n    attributes: PropTypes.array.isRequired,\n    categories: PropTypes.array.isRequired\n  }).isRequired\n};\n","import React from 'react';\n\nimport { Link } from \"react-router-dom\";\n\nexport default function NavBar(props) {\n  return(\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-lavender\">\n      <a className=\"navbar-brand\" href=\"#\">Start Well</a>\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item active\">\n            <a className=\"nav-link\" href=\"#\">Home <span className=\"sr-only\">(current)</span></a>\n          </li>\n          <li className=\"nav-item\">\n            <Link to=\"/combined\" className=\"nav-link\">Combined</Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to=\"/table\" className=\"nav-link\">Table</Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to=\"/decision-tree\" className=\"nav-link\">Decision tree</Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to=\"/process\" className=\"nav-link\">Process</Link>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  )\n}\n","import React from 'react';\nimport DecisionTree from '../components/decision-tree/decision-tree';\nimport ComparisonTable from '../components/comparison-table/comparison-table';\nimport NavBar from '../components/navbar/navbar';\n\nimport DECISIONTREE_DATA from '../data/decision-tree.json';\nimport TABLE_DATA from '../data/table-data.json';\n\nfunction CombinedPage() {\n  return (\n    <div>\n      <NavBar />\n      <div class=\"container\">\n          <DecisionTree\n                  data={DECISIONTREE_DATA}\n                  resultHeading={\"Based on your results...\"}\n                />\n          <div className=\"row\">\n            <div className=\"col-lg-12\">\n              <ComparisonTable\n              data={TABLE_DATA}\n              />\n            </div>\n          </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CombinedPage;\n","import React from 'react';\nimport DecisionTree from '../components/decision-tree/decision-tree';\nimport NavBar from '../components/navbar/navbar';\n\nimport DECISIONTREE_DATA from '../data/decision-tree.json';\n\nfunction DecisionTreePage() {\n  return (\n    <div>\n      <NavBar />\n      <div class=\"container py-4\">\n        <div class=\"row\">\n          <div class=\"col-12\">\n            <h1>What type of early learning service is right for you?</h1>\n            <p>Lorem ipsum dolor sit amet...</p>\n          </div>\n        </div>\n        <DecisionTree\n          data={DECISIONTREE_DATA}\n          resultHeading={\"Based on your results...\"}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default DecisionTreePage;\n","import React from 'react';\nimport ComparisonTable from '../components/comparison-table/comparison-table';\nimport NavBar from '../components/navbar/navbar';\n\nimport TABLE_DATA from '../data/table-data.json';\n\nfunction TablePage() {\n  return (\n    <div>\n      <NavBar />\n      <div class=\"container-responsive pt-4 mt-4\">\n        <div className=\"row pb-2\">\n          <div className=\"col-lg-12\">\n            <h1>Comparison table</h1>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-lg-12\">\n            <ComparisonTable\n            data={TABLE_DATA}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default TablePage;\n","import React from 'react';\nimport NavBar from '../components/navbar/navbar';\nimport { Link } from \"react-router-dom\";\n\nfunction HomePage() {\n  return (\n    <div>\n      <NavBar />\n      <div className=\"container\">\n        <div className=\"row mt-4 pt-4\">\n          <div className=\"col-lg-4 py-4\">\n            <Link to=\"/decision-tree\" className=\"link-not-blue\">\n              <div class=\"card\">\n                <h4 class=\"card-header\">What's the right early learning for you?</h4>\n                <div class=\"card-body\">Find out which type of centre you should go to with our very cool and extremely interactive quiz.</div>\n              </div>\n            </Link>\n          </div>\n          <div className=\"col-lg-4 py-4\">\n            <Link to=\"/table\" className=\"link-not-blue\">\n              <div class=\"card\">\n                <h4 class=\"card-header\">Compare types of early learning service</h4>\n                <div class=\"card-body\">Not sure where to start looking?</div>\n              </div>\n            </Link>\n          </div>\n          <div className=\"col-lg-4 py-4\">\n            <Link to=\"/combined\" className=\"link-not-blue\">\n              <div class=\"card\">\n                <h4 class=\"card-header\">A third thing</h4>\n                <div class=\"card-body\">This goes to the two things combined</div>\n              </div>\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default HomePage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Checklist(props) {\n  return (\n    <div className=\"card\" onClick={ () => props.onClick(props.index) }>\n      <div className={`card-header ${props.active && 'bg-lavender'}`}>\n        <h2>{props.data.title}</h2>\n      </div>\n      <div className=\"card-body\">\n        <p>{props.data.blurb}</p>\n      </div>\n    </div>\n  )\n}\n\nChecklist.propTypes = {\n  data: PropTypes.shape({\n    title: PropTypes.string,\n    blurb: PropTypes.string,\n    lists: PropTypes.array,\n    links: PropTypes.array\n  }).isRequired,\n  index: PropTypes.number.isRequired,\n  onClick: PropTypes.func.isRequired,\n  active: PropTypes.bool.isRequired\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function ProcessItem(props) {\n  return (\n    <div>\n      {\n        props.data.lists.map((list, index) => (\n          <div key={ list.title }>\n            <h4>{list.title}</h4>\n            <ul>\n              {\n                list.items.map((item, index) => (\n                  <li key={ item }>{ item }</li>\n                ))\n              }\n            </ul>\n          </div>\n        ))\n      }\n    </div>\n  )\n}\n\nProcessItem.propTypes = {\n  data: PropTypes.shape({\n    title: PropTypes.string,\n    blurb: PropTypes.string,\n    lists: PropTypes.array,\n    links: PropTypes.array\n  }).isRequired\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Checklist from '../checklist/checklist';\nimport ProcessItem from '../process-item/process-item';\n\nexport default function ProcessGroup(props) {\n  const [activeChecklist, setActiveChecklist] = useState(null);\n\n  const handleClick = (checklistIndex) => {\n    setActiveChecklist(checklistIndex);\n  };\n\n  return (\n    <div>\n      <div className=\"row\">\n        {\n          props.checklists.map((checklist, index) => (\n            <div className=\"col checklist\" key={ checklist.title }>\n              <Checklist\n                data={ checklist }\n                index={ index }\n                onClick={ handleClick }\n                active={ index === activeChecklist }\n              />\n            </div>\n          ))\n        }\n      </div>\n      {\n        activeChecklist && (\n          <div className=\"row\">\n            {\n              <div className=\"col-12\">\n                <ProcessItem data={ props.checklists[activeChecklist] } />\n              </div>\n            }\n          </div>\n        )\n      }\n    </div>\n  )\n}\n\nProcessGroup.propTypes = {\n  checklists: PropTypes.array.isRequired\n};\n","import React from 'react';\nimport ProcessGroup from '../components/process-group/process-group';\nimport NavBar from '../components/navbar/navbar';\n\nimport CHECKLIST_DATA from '../data/checklist-data.json';\n\nfunction ProcessPage() {\n  return (\n    <div>\n      <NavBar />\n      <div className=\"container mt-4 pt-4\">\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <h1>Process</h1>\n          </div>\n        </div>\n        <ProcessGroup checklists={ CHECKLIST_DATA } />\n      </div>\n    </div>\n  );\n}\n\nexport default ProcessPage;\n","import React from 'react';\n\nimport { HashRouter, Route } from \"react-router-dom\";\n\nimport CombinedPage from './pages/combined'\nimport DecisionTreePage from './pages/decision-tree'\nimport TablePage from './pages/table'\nimport HomePage from './pages/home'\nimport ProcessPage from './pages/process'\n\nimport './App.scss';\n\nfunction App() {\n  return (\n    <HashRouter basename='/'>\n      <Route exact path=\"/\" component={HomePage} />\n      <Route path=\"/combined\" component={CombinedPage} />\n      <Route path=\"/decision-tree\" component={DecisionTreePage} />\n      <Route path=\"/table\" component={TablePage} />\n      <Route path=\"/process\" component={ProcessPage} />\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}