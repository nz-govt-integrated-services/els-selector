{"version":3,"sources":["components/layer/layer.jsx","components/external-link/external-link.jsx","components/option/option.jsx","components/utils/idSafeString.js","components/result/result.jsx","components/decision-tree/decision-tree.jsx","components/navbar/navbar.jsx","pages/decision-tree.jsx","components/comparison-cell/comparison-cell.jsx","components/comparison-table/comparison-table.jsx","pages/table.jsx","pages/home.jsx","components/process-item-preview/process-item-preview.jsx","components/process-item/process-item.jsx","components/process-group/process-group.jsx","pages/process.jsx","pages/financial-help.jsx","App.js","serviceWorker.js","index.js"],"names":["Layer","props","useState","isExpanded","setIsExpanded","moreInfoClasses","classNames","iconClasses","removeWhitespaces","string","replace","className","text","dangerouslySetInnerHTML","__html","question","question_details","moreInfo","preview","type","aria-expanded","onClick","fullText","answers","map","answer","index","key","id","layerCount","name","value","htmlFor","defaultProps","ExternalLink","linkClasses","class","href","title","target","rel","style","Option","heading","conditions","length","condition","links","link","idSafeString","Result","options","option","DecisionTree","selectedAnswers","setSelectedAnswers","setLayerCount","calculatorResultRef","useRef","calculatorRowRef","showResults","setShowResults","useDebouncedCallback","delayShowResults","handleClick","layerLevel","newSelectedAnswers","slice","results","filter","result","a","useEffect","whichToScroll","scrollOption","window","innerWidth","smoothscroll","polyfill","current","scrollIntoView","behaviour","block","data","isLastItem","subquestion","ref","aria-live","aria-atomic","resultHeading","join","lastUpdated","NavBar","isNavCollapsed","setIsNavCollapsed","exact","to","activeClassName","data-toggle","data-target","aria-controls","aria-label","DecisionTreePage","DECISIONTREE_DATA","ComparisonCell","mappedValue","true","color","icon","faCheckCircle","false","faTimesCircle","partial","faMinusCircle","unknown","faQuestionCircle","notes","ComparisonTable","typeOrder","categoryMemberIds","categories","category","members","flat","typesWithNoCategory","Object","keys","types","x","includes","concat","colSpan","attributes","attribute","values","TablePage","TABLE_DATA","HomePage","ProcessItemPreview","active","blurb","ProcessItem","lists","list","items","item","ProcessGroup","activeItem","setActiveItem","itemIndex","checklists","checklist","faGreaterThan","ProcessPage","CHECKLIST_DATA","FinancialHelpPage","App","basename","path","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.35514059.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nexport default function Layer(props) {\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n\r\n  const toggleMoreInfo = () => {\r\n    setIsExpanded(!isExpanded);\r\n  };\r\n  const moreInfoClasses = classNames(\r\n    'more-info__content',\r\n    'pl-5',\r\n    isExpanded ? 'block' : 'hidden'\r\n  );\r\n  const iconClasses = classNames(\r\n    'fas',\r\n    'pr-2',\r\n    isExpanded ? 'fa-minus' : 'fa-plus'\r\n  );\r\n\r\n  const removeWhitespaces = (string) => string.replace(/ /g, '');\r\n\r\n  return (\r\n    <fieldset className=\"pt-4\">\r\n      {\r\n        props.text\r\n        && (\r\n          <div className=\"pb-5 text-section\" dangerouslySetInnerHTML={{ __html: props.text }} />\r\n        )\r\n      }\r\n      {\r\n        props.question && (\r\n          <div>\r\n            <legend className=\"w-auto d-inline h3\">{props.question}</legend>\r\n          </div>\r\n        )\r\n      }\r\n      {\r\n        props.question_details && (\r\n          <div className=\"pb-5 question-details-section\" dangerouslySetInnerHTML={{ __html: props.question_details }} />\r\n        )\r\n      }\r\n      <div className=\"more-info-section\">\r\n        { props.moreInfo.preview\r\n          && (\r\n            <button\r\n              type=\"button\"\r\n              className=\"more-info__button ml-5 py-3\"\r\n              aria-expanded={isExpanded}\r\n              onClick={() => toggleMoreInfo()}\r\n            >\r\n              <i className={iconClasses} />\r\n              { props.moreInfo.preview }\r\n            </button>\r\n          )}\r\n        <div className={moreInfoClasses}>\r\n          <p dangerouslySetInnerHTML={{ __html: props.moreInfo.fullText }} />\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        {\r\n          props.answers.map((answer, index) => (\r\n            <div className=\"position-relative col\" key={answer.answer}>\r\n              <input\r\n                type=\"radio\"\r\n                id={`${removeWhitespaces(answer.answer)}-${props.layerCount}-${props.index}`}\r\n                name={props.layerCount}\r\n                value={index}\r\n                onClick={() => props.onClick(answer, props.index)}\r\n                className=\"answer\"\r\n              />\r\n              <label htmlFor={`${removeWhitespaces(answer.answer)}-${props.layerCount}-${props.index}`} className=\"answer__label\">\r\n                <span className=\"answer__inner\">\r\n                  {answer.answer}\r\n                </span>\r\n              </label>\r\n              <span className=\"radio-custom\" />\r\n            </div>\r\n          ))\r\n        }\r\n      </div>\r\n    </fieldset>\r\n  );\r\n}\r\n\r\nLayer.defaultProps = {\r\n  question: '',\r\n  text: '',\r\n  question_details: '',\r\n  moreInfo: {}\r\n};\r\n\r\nLayer.propTypes = {\r\n  question: PropTypes.string,\r\n  moreInfo: PropTypes.shape({\r\n    preview: PropTypes.string,\r\n    fullText: PropTypes.string\r\n  }),\r\n  text: PropTypes.string,\r\n  question_details: PropTypes.string,\r\n  answers: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  index: PropTypes.number.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n  layerCount: PropTypes.number.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport './external-link.scss';\r\n\r\nexport default function ExternalLink(props) {\r\n  const linkClasses = classNames(\r\n    'external-link',\r\n    props.class\r\n  );\r\n  return (\r\n    <span>\r\n      {' '}\r\n      <a\r\n        href={props.href}\r\n        className={linkClasses}\r\n        title=\"Open external link\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n        style={{\"whiteSpace\": \"nowrap\"}}\r\n      >\r\n        {props.text}\r\n      </a>\r\n      <span className=\"sr-only\">\r\n        (external link)\r\n      </span>\r\n      {' '}\r\n    </span>\r\n  );\r\n}\r\n\r\nExternalLink.defaultProps = {\r\n  class: ''\r\n};\r\n\r\nExternalLink.propTypes = {\r\n  href: PropTypes.string.isRequired,\r\n  text: PropTypes.string.isRequired,\r\n  class: PropTypes.string\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ExternalLink from '../external-link/external-link';\r\n\r\nexport default function Option(props) {\r\n  return (\r\n    <div className=\"option\" id={props.id}>\r\n      {\r\n        props.heading && (\r\n          <h3 className=\"option__heading\">{props.heading}</h3>\r\n        )\r\n      }\r\n      {\r\n        props.text && (\r\n          <p className=\"option__text\" dangerouslySetInnerHTML={{ __html: props.text }} />\r\n        )\r\n      }\r\n      {\r\n        props.conditions.length >= 1 && (\r\n          <ul className=\"option__conditions\">\r\n            {\r\n              props.conditions.map((condition, index) => (\r\n                <li key={index}>\r\n                  <p dangerouslySetInnerHTML={{ __html: condition }} />\r\n                </li>\r\n              ))\r\n            }\r\n          </ul>\r\n        )\r\n      }\r\n      {\r\n        props.links.length >= 1\r\n        && (\r\n          <ul className=\"option__links\">\r\n            {props.links.map((link, index) => (\r\n              <li key={index}>\r\n                <p>\r\n                  <ExternalLink href={link.href} text={link.text} />\r\n                </p>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nOption.defaultProps = {\r\n  heading: '',\r\n  text: '',\r\n  links: [],\r\n  conditions: [],\r\n  id: ''\r\n};\r\n\r\nOption.propTypes = {\r\n  heading: PropTypes.string,\r\n  text: PropTypes.string,\r\n  links: PropTypes.arrayOf(PropTypes.object),\r\n  conditions: PropTypes.arrayOf(PropTypes.string),\r\n  id: PropTypes.string\r\n};\r\n","export default function idSafeString(string) {\r\n  return string.replace(/[ ()']/g, '');\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ExternalLink from '../external-link/external-link';\r\nimport Option from '../option/option';\r\nimport idSafeString from '../utils/idSafeString';\r\n\r\nexport default function Result(props) {\r\n  return (\r\n    <div className=\"result\" id={`result-${props.id}`}>\r\n      {\r\n        props.text && (\r\n          <p dangerouslySetInnerHTML={{ __html: props.text }} />\r\n        )\r\n      }\r\n      {\r\n        props.conditions.length >= 1\r\n        && (\r\n          <div className=\"result__conditions\">\r\n            <ul>\r\n              {props.conditions.map((condition, index) => (\r\n                <li key={index}>\r\n                  <p dangerouslySetInnerHTML={{ __html: condition }} />\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        )\r\n      }\r\n      {\r\n        props.links.length >= 1\r\n        && (\r\n          <ul className=\"result__links\">\r\n            {props.links.map((link, index) => (\r\n              <li key={index}>\r\n                <p>\r\n                  <ExternalLink href={link.href} text={link.text} />\r\n                </p>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )\r\n      }\r\n      {\r\n        props.options.length >= 1 && (\r\n          <div className=\"result__options\">\r\n            {props.options.map((option) => (\r\n              <Option\r\n                heading={option.heading}\r\n                text={option.text}\r\n                links={option.links}\r\n                conditions={option.conditions}\r\n                id={`result-option-${idSafeString(option.heading)}`}\r\n              />\r\n            ))}\r\n          </div>\r\n        )\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nResult.defaultProps = {\r\n  links: [],\r\n  conditions: [],\r\n  options: [],\r\n  text: '',\r\n  id: ''\r\n};\r\n\r\nResult.propTypes = {\r\n  text: PropTypes.string,\r\n  links: PropTypes.arrayOf(PropTypes.object),\r\n  conditions: PropTypes.arrayOf(PropTypes.string),\r\n  options: PropTypes.arrayOf(PropTypes.object),\r\n  id: PropTypes.string\r\n};\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDebouncedCallback } from 'use-debounce';\r\nimport smoothscroll from 'smoothscroll-polyfill';\r\n\r\nimport Layer from '../layer/layer';\r\nimport Result from '../result/result';\r\nimport idSafeString from '../utils/idSafeString';\r\n\r\nimport './decision-tree.scss';\r\n\r\nexport default function DecisionTree(props) {\r\n  const [selectedAnswers, setSelectedAnswers] = useState([]);\r\n  const [layerCount, setLayerCount] = useState(1);\r\n  const calculatorResultRef = useRef(null);\r\n  const calculatorRowRef = useRef(null);\r\n  const [showResults, setShowResults] = useState(false);\r\n  const [delayShowResults] = useDebouncedCallback(\r\n    () => {\r\n      setShowResults(true);\r\n    },\r\n    600\r\n  );\r\n\r\n  const handleClick = (answer, layerLevel) => {\r\n    setLayerCount(layerCount + 1);\r\n    let newSelectedAnswers = selectedAnswers;\r\n    if (selectedAnswers.length >= (layerLevel + 1)) {\r\n      // if this is selecting an answer at an earlier level than what we've already selected\r\n      // cut out the later level answers and results\r\n      newSelectedAnswers = selectedAnswers.slice(0, layerLevel);\r\n      setShowResults(false);\r\n    }\r\n    setSelectedAnswers([...newSelectedAnswers, { answer, layerCount }]);\r\n  };\r\n\r\n  const results = selectedAnswers.filter((answer) => (answer.answer.result))\r\n    .map((a) => a.answer.result);\r\n\r\n  if (selectedAnswers.length >= 1 && results.length >= 1) {\r\n    delayShowResults();\r\n  }\r\n\r\n  const scrollToSection = () => {\r\n    let whichToScroll = null;\r\n    let scrollOption = window.innerWidth < 576 ? 'center' : 'nearest';\r\n    smoothscroll.polyfill();\r\n\r\n    if (showResults) {\r\n      whichToScroll = calculatorResultRef;\r\n      if (window.innerWidth < 576) scrollOption = 'start';\r\n    } else if (selectedAnswers.length >= 1) {\r\n      whichToScroll = calculatorRowRef;\r\n    }\r\n    if (whichToScroll !== null && whichToScroll.current !== null) {\r\n      whichToScroll.current.scrollIntoView({ behaviour: 'smooth', block: scrollOption });\r\n    }\r\n  };\r\n\r\n  useEffect(scrollToSection, [selectedAnswers, showResults]);\r\n\r\n  const concatenateAnswers = () => {\r\n    const answers = selectedAnswers.map((a) => idSafeString(a.answer.answer));\r\n    return answers.join('__');\r\n  };\r\n\r\n  return (\r\n    <div className=\"row decision-tree-wrapper\">\r\n      <section className=\"col-lg-12 page-section\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n              <Layer\r\n                question={props.data.question}\r\n                answers={props.data.answers}\r\n                moreInfo={props.data.moreInfo}\r\n                index={0}\r\n                onClick={handleClick}\r\n                layerCount={0}\r\n                key=\"0\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      {\r\n        selectedAnswers.map((answer, index) => {\r\n          const isLastItem = index + 1 === selectedAnswers.length;\r\n          return answer.answer.subquestion\r\n              && (\r\n                <section className=\"col-lg-12 page-section\" key={answer.layerCount}>\r\n                  <div className=\"container\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-12\" ref={isLastItem ? calculatorRowRef : null}>\r\n                        <Layer\r\n                          question={answer.answer.subquestion.question}\r\n                          answers={answer.answer.subquestion.answers}\r\n                          index={index + 1}\r\n                          layerCount={answer.layerCount}\r\n                          onClick={handleClick}\r\n                          moreInfo={answer.answer.subquestion.moreInfo}\r\n                          text={answer.answer.subquestion.text}\r\n                          question_details={answer.answer.subquestion.question_details}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </section>\r\n              );\r\n        })\r\n      }\r\n\r\n      <section className=\"col-lg-12 mt-4 pt-4\" aria-live=\"polite\" aria-atomic=\"true\">\r\n        {\r\n          showResults && (\r\n            <div className=\"container\" ref={calculatorResultRef}>\r\n              {\r\n                props.resultHeading && (\r\n                  <h2>{ props.resultHeading }</h2>\r\n                )\r\n              }\r\n              {\r\n                results.map((result, index) => (\r\n                  <div className=\"row pb-4\" key={index}>\r\n                    <div className=\"col-12 mb-4\">\r\n                      <Result\r\n                        text={result.text}\r\n                        links={result.links}\r\n                        conditions={result.conditions}\r\n                        options={result.options}\r\n                        id={concatenateAnswers()}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                ))\r\n              }\r\n            </div>\r\n          )\r\n        }\r\n      </section>\r\n      {\r\n        props.lastUpdated && (\r\n          <section className=\"col-lg-12 mb-4\">\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"col-12 mb-4\">\r\n                  <p>\r\n                    Last updated:\r\n                    { props.lastUpdated }\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n        )\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nDecisionTree.defaultProps = {\r\n  lastUpdated: '',\r\n  resultHeading: ''\r\n};\r\n\r\nDecisionTree.propTypes = {\r\n  data: PropTypes.shape({\r\n    question: PropTypes.string,\r\n    answers: PropTypes.array.isRequired,\r\n    moreInfo: PropTypes.object\r\n  }).isRequired,\r\n  lastUpdated: PropTypes.string,\r\n  resultHeading: PropTypes.string\r\n};\r\n","import React, { useState } from 'react';\r\n\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport default function NavBar(props) {\r\n  const [isNavCollapsed, setIsNavCollapsed] = useState(true);\r\n  const handleNavCollapse = () => setIsNavCollapsed(!isNavCollapsed);\r\n\r\n  return(\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-impendingstorm--deep\">\r\n      <NavLink exact to=\"/\" className=\"navbar-brand\" activeClassName=\"active\">Start Well</NavLink>\r\n      <button className=\"navbar-toggler\"\r\n              type=\"button\"\r\n              data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\"\r\n              aria-controls=\"navbarSupportedContent\"\r\n              aria-label=\"Toggle navigation\"\r\n              aria-expanded={!isNavCollapsed ? true : false}\r\n              onClick={handleNavCollapse}>\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n\r\n      <div className={`${isNavCollapsed ? 'collapse' : ''} navbar-collapse`} id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <NavLink to=\"/process\" className=\"nav-link\" activeClassName=\"active\">Process</NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <NavLink to=\"/decision-tree\" className=\"nav-link\" activeClassName=\"active\">Decision tree</NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <NavLink to=\"/table\" className=\"nav-link\" activeClassName=\"active\">Table</NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <NavLink to=\"/financial-help\" className=\"nav-link\" activeClassName=\"active\">Financial help</NavLink>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport DecisionTree from '../components/decision-tree/decision-tree';\r\nimport NavBar from '../components/navbar/navbar';\r\n\r\nimport DECISIONTREE_DATA from '../data/decision-tree.json';\r\n\r\nfunction DecisionTreePage() {\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      <div className=\"container py-4\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <h1>What type of early learning service is right for you?</h1>\r\n            <p>Lorem ipsum dolor sit amet...</p>\r\n          </div>\r\n        </div>\r\n        <DecisionTree\r\n          data={DECISIONTREE_DATA}\r\n          resultHeading={\"Based on your results...\"}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DecisionTreePage;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ExternalLink from '../external-link/external-link';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCheckCircle, faTimesCircle, faQuestionCircle, faMinusCircle } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport default function ComparisonCell(props) {\r\n  const valueMap = {\r\n    true: {color: \"green\", icon: faCheckCircle},\r\n    false: {color: \"red\", icon: faTimesCircle},\r\n    partial: {color: \"yellow\", icon: faMinusCircle},\r\n    unknown: {color: \"orange\", icon: faQuestionCircle}\r\n  }\r\n  const mappedValue = valueMap[props.value]\r\n\r\n  return (\r\n    <td>\r\n      <div className=\"d-flex flex-column align-items-center\">\r\n        {\r\n          props.value && (\r\n            <FontAwesomeIcon icon={ mappedValue.icon } color={`var(--${mappedValue.color})`} className=\"mb-1\" />\r\n          )\r\n        }\r\n        {\r\n          props.notes && (\r\n            <span className=\"small text-center\">{props.notes}</span>\r\n          )\r\n        }\r\n        {\r\n          props.links && (\r\n            <div className=\"small\">\r\n              {\r\n                props.links.map((link, index) => (\r\n                  <ExternalLink href={ link.href } text={ link.text } key={ `${link.href}-${link.text}` } />\r\n                ))\r\n              }\r\n            </div>\r\n          )\r\n        }\r\n      </div>\r\n    </td>\r\n  )\r\n}\r\n\r\nComparisonCell.defaultProps = {\r\n  notes: '',\r\n  value: '',\r\n  links: []\r\n};\r\n\r\nComparisonCell.propTypes = {\r\n  value: PropTypes.string,\r\n  notes: PropTypes.string,\r\n  links: PropTypes.array\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ComparisonCell from '../comparison-cell/comparison-cell'\r\n\r\nexport default function ComparisonTable(props) {\r\n  const typeOrder = () => {\r\n    const categoryMemberIds = props.data.categories.map((category) => (category.members)).flat();\r\n    const allTypeIds = Object.keys(props.data.types);\r\n    const typesWithNoCategory = allTypeIds.filter(x => !categoryMemberIds.includes(x));\r\n    return categoryMemberIds.concat(typesWithNoCategory)\r\n  }\r\n\r\n  return (\r\n    <div className=\"table-responsive\">\r\n      <table className=\"table table-bordered border-0 table-hover\">\r\n        <thead>\r\n          <tr>\r\n            <th className=\"border-0\" />\r\n            {\r\n              props.data.categories.map((category, index) => (\r\n                <th colSpan={category.members.length}\r\n                    className=\"text-center\"\r\n                    key={`category-${category.name}`}>\r\n                  {category.name}\r\n                </th>\r\n              ))\r\n            }\r\n          </tr>\r\n          <tr>\r\n            <th />\r\n            {\r\n              typeOrder().map((type, index) => (\r\n                <th className=\"text-center\"\r\n                    key={`type-${props.data.types[type].name}`}>\r\n                  { props.data.types[type].name }\r\n                </th>\r\n              ))\r\n            }\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {\r\n            props.data.attributes.map((attribute, index) => (\r\n              <tr key={`attribute-${attribute.name}`}>\r\n                <td className=\"font-weight-bold\">\r\n                  {attribute.name}\r\n                </td>\r\n                {\r\n                  typeOrder().map((type, index) => (\r\n                    <ComparisonCell\r\n                      value = { attribute.values[type] && attribute.values[type].value }\r\n                      notes = { attribute.values[type] && attribute.values[type].notes }\r\n                      links = { attribute.values[type] && attribute.values[type].links }\r\n                      key = { `attribute-${attribute.name}-type-${props.data.types[type].name}` }\r\n                    />\r\n                  ))\r\n                }\r\n              </tr>\r\n            ))\r\n          }\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nComparisonTable.propTypes = {\r\n  data: PropTypes.shape({\r\n    types: PropTypes.object.isRequired,\r\n    attributes: PropTypes.array.isRequired,\r\n    categories: PropTypes.array.isRequired\r\n  }).isRequired\r\n};\r\n","import React from 'react';\r\nimport ComparisonTable from '../components/comparison-table/comparison-table';\r\nimport NavBar from '../components/navbar/navbar';\r\n\r\nimport TABLE_DATA from '../data/table-data.json';\r\n\r\nfunction TablePage() {\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      <div className=\"container mt-4\">\r\n        <div className=\"row pb-2\">\r\n          <div className=\"col-lg-12\">\r\n            <h1 className=\"mb-4\">Comparison table</h1>\r\n            <p>This is a table to compare different types of ECE.</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"container-responsive px-4 py-2 mt-4 overflow-hidden\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-12\">\r\n            <ComparisonTable\r\n            data={TABLE_DATA}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TablePage;\r\n","import React from 'react';\r\nimport NavBar from '../components/navbar/navbar';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction HomePage() {\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      <div className=\"container py-4\">\r\n        <h1>Early learning services in New Zealand</h1>\r\n        <div className=\"row mt-4\">\r\n          <div className=\"col-lg-4 py-4\">\r\n            <Link to=\"/process\" className=\"link-not-blue\">\r\n              <div className=\"card\">\r\n                <h4 className=\"card-header\">How to find an early learning service</h4>\r\n                <div className=\"card-body\">Not sure where to start?</div>\r\n              </div>\r\n            </Link>\r\n          </div>\r\n          <div className=\"col-lg-4 py-4\">\r\n            <Link to=\"/decision-tree\" className=\"link-not-blue\">\r\n              <div className=\"card\">\r\n                <h4 className=\"card-header\">What's the right type of early learning service for you?</h4>\r\n                <div className=\"card-body\">Find out which type of centre you should go to with our quiz.</div>\r\n              </div>\r\n            </Link>\r\n          </div>\r\n          <div className=\"col-lg-4 py-4\">\r\n            <Link to=\"/table\" className=\"link-not-blue\">\r\n              <div className=\"card\">\r\n                <h4 className=\"card-header\">Compare types of early learning service</h4>\r\n                <div className=\"card-body\">Not sure what the difference between a playcentre and a playgroup is?</div>\r\n              </div>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './process-item-preview.scss';\r\n\r\nexport default function ProcessItemPreview(props) {\r\n  return (\r\n    <div className={`card process-item-preview process-item-preview--${props.index} ${props.active && 'process-item-preview--active'}`} onClick={ () => props.onClick(props.index) }>\r\n      <div className=\"card-header\">\r\n        <h4>{props.data.title}</h4>\r\n      </div>\r\n      <div className=\"card-body\">\r\n        <p>{props.data.blurb}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nProcessItemPreview.propTypes = {\r\n  data: PropTypes.shape({\r\n    title: PropTypes.string,\r\n    blurb: PropTypes.string,\r\n    lists: PropTypes.array,\r\n    links: PropTypes.array\r\n  }).isRequired,\r\n  index: PropTypes.number.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n  active: PropTypes.bool.isRequired\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './process-item.scss';\r\n\r\nexport default function ProcessItem(props) {\r\n  return (\r\n    <div className=\"border p-4 process-item\">\r\n      {\r\n        props.data.lists.map((list, index) => (\r\n          <div key={ list.title }>\r\n            <h4>{list.title}</h4>\r\n            <ul>\r\n              {\r\n                list.items.map((item, index) => (\r\n                  <li key={ item }>{ item }</li>\r\n                ))\r\n              }\r\n            </ul>\r\n          </div>\r\n        ))\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nProcessItem.propTypes = {\r\n  data: PropTypes.shape({\r\n    title: PropTypes.string,\r\n    blurb: PropTypes.string,\r\n    lists: PropTypes.array,\r\n    links: PropTypes.array\r\n  }).isRequired\r\n};\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ProcessItemPreview from '../process-item-preview/process-item-preview';\r\nimport ProcessItem from '../process-item/process-item';\r\n\r\nimport './process-group.scss';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faGreaterThan } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport default function ProcessGroup(props) {\r\n  const [activeItem, setActiveItem] = useState(null);\r\n\r\n  const handleClick = (itemIndex) => {\r\n    setActiveItem(itemIndex);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"row align-items-stretch\">\r\n        {\r\n          props.checklists.map((checklist, index) => (\r\n            <div className=\"col checklist\" key={ checklist.title }>\r\n              <ProcessItemPreview\r\n                data={ checklist }\r\n                index={ index }\r\n                onClick={ handleClick }\r\n                active={ index === activeItem }\r\n              />\r\n              {\r\n                index !== (props.checklists.length - 1) && (\r\n                  <div className=\"checklist__arrow\">\r\n                    <FontAwesomeIcon icon={faGreaterThan} />\r\n                  </div>\r\n                )\r\n              }\r\n            </div>\r\n          ))\r\n        }\r\n      </div>\r\n      {\r\n        (activeItem !== null) && (\r\n          <div className=\"row\">\r\n            {\r\n              <div className=\"col-12\">\r\n                <ProcessItem data={ props.checklists[activeItem] } />\r\n              </div>\r\n            }\r\n          </div>\r\n        )\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nProcessGroup.propTypes = {\r\n  checklists: PropTypes.array.isRequired\r\n};\r\n","import React from 'react';\r\nimport ProcessGroup from '../components/process-group/process-group';\r\nimport NavBar from '../components/navbar/navbar';\r\n\r\nimport CHECKLIST_DATA from '../data/checklist-data.json';\r\n\r\nfunction ProcessPage() {\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      <div className=\"container mt-4\">\r\n        <div className=\"row mb-4\">\r\n          <div className=\"col-12\">\r\n            <h1 className=\"mb-4\">How do we sign up for an early learning service?</h1>\r\n            <p>Not sure where to start? It is here.</p>\r\n          </div>\r\n        </div>\r\n        <ProcessGroup checklists={ CHECKLIST_DATA } />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProcessPage;\r\n","import React from 'react';\r\nimport NavBar from '../components/navbar/navbar';\r\n\r\nfunction FinancialHelpPage() {\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      <div className=\"container py-4\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <h1>What financial help could you get?</h1>\r\n            <ul>\r\n              <li>20 Hours Free ECE</li>\r\n              <li>Childcare Subsidy</li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FinancialHelpPage;\r\n","import React from 'react';\r\n\r\nimport { HashRouter, Route } from \"react-router-dom\";\r\n\r\nimport DecisionTreePage from './pages/decision-tree'\r\nimport TablePage from './pages/table'\r\nimport HomePage from './pages/home'\r\nimport ProcessPage from './pages/process'\r\nimport FinancialHelpPage from './pages/financial-help'\r\n\r\nimport './App.scss';\r\n\r\nfunction App() {\r\n  return (\r\n    <HashRouter basename='/'>\r\n      <Route exact path=\"/\" component={HomePage} />\r\n      <Route path=\"/decision-tree\" component={DecisionTreePage} />\r\n      <Route path=\"/table\" component={TablePage} />\r\n      <Route path=\"/process\" component={ProcessPage} />\r\n      <Route path=\"/financial-help\" component={FinancialHelpPage} />\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}