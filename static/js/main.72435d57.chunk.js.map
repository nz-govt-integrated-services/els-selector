{"version":3,"sources":["components/layer/layer.jsx","components/external-link/external-link.jsx","components/option/option.jsx","components/utils/idSafeString.js","components/result/result.jsx","components/decision-tree/decision-tree.jsx","components/navbar/navbar.jsx","pages/decision-tree.jsx","components/ece-attribute-icons/ages-icon.jsx","components/ece-attribute-icons/cost-icon.jsx","components/ece-attribute-icons/language-icon.jsx","components/ece-attribute-icons/number-of-centres-icon.jsx","components/ece-attribute-icons/parent-involvement-icon.jsx","components/ece-attribute-icons/session-length-icon.jsx","components/ece-attribute-icons/teacher-qualifications-icon.jsx","components/ece-attribute/ece-attribute.jsx","components/ece-type/ece-type.jsx","components/level/level.jsx","components/comparison-cell/comparison-cell.jsx","components/comparison-table/comparison-table.jsx","components/tupac/tupac.jsx","pages/table.jsx","components/process-item-preview/process-item-preview.jsx","components/process-item/process-item.jsx","components/process-group/process-group.jsx","pages/home.jsx","pages/process.jsx","components/assistance-type/assistance-type.jsx","pages/financial-help.jsx","App.js","serviceWorker.js","index.js"],"names":["Layer","props","useState","isExpanded","setIsExpanded","moreInfoClasses","classNames","iconClasses","removeWhitespaces","string","replace","className","text","dangerouslySetInnerHTML","__html","question","question_details","moreInfo","preview","type","aria-expanded","onClick","fullText","answers","map","answer","index","key","id","layerCount","name","value","htmlFor","defaultProps","ExternalLink","linkClasses","class","href","title","target","rel","style","Option","heading","conditions","length","condition","links","link","idSafeString","Result","options","option","DecisionTree","selectedAnswers","setSelectedAnswers","setLayerCount","calculatorResultRef","useRef","calculatorRowRef","showResults","setShowResults","useDebouncedCallback","delayShowResults","handleClick","layerLevel","newSelectedAnswers","slice","results","filter","result","a","useEffect","whichToScroll","scrollOption","window","innerWidth","smoothscroll","polyfill","current","scrollIntoView","behaviour","block","data","isLastItem","subquestion","ref","aria-live","aria-atomic","resultHeading","join","lastUpdated","NavBar","isNavCollapsed","setIsNavCollapsed","exact","to","activeClassName","data-toggle","data-target","aria-controls","aria-label","DecisionTreePage","DECISIONTREE_DATA","AgesIcon","inRange","number","range","from","startAge","always","sometimes","CostIcon","costLevel","LanguageIcon","languages","language","icon","faComment","proportion","NumberOfCentresIcon","ParentInvolvementIcon","minimum","involvementLevel","minimum_percent","SessionLengthIcon","getSectorPath","x","y","outerDiameter","a1","a2","degtorad","Math","PI","cr","cos","sin","startDegreeForHour","hour","endDegreeForHour","width","height","startHour","d","TeacherQualificationsIcon","qualificationLevel","minimum_percent_qualified","EceAttribute","mappedType","ages","cost","EceType","faTimes","attributes","attribute","Level","level","ComparisonCell","mappedValue","true","color","faCheckCircle","false","faTimesCircle","partial","faMinusCircle","unknown","faQuestionCircle","notes","ComparisonTable","columns","TABLE_DATA","column","dataIndex","fixed","selectedType","render","values","render_comparison_cell","dataSource","rows","scroll","pagination","size","Tupac","setSelectedType","selectedTypeRef","console","log","eceTypeData","KINDY_DATA","KOHANGA_DATA","AKOTEU_DATA","AOGA_DATA","EDUCATION_AND_CARE_DATA","MONTESSORI_DATA","PLAYCENTRE_DATA","PLAYGROUP_DATA","PUNA_KOHUNGAHUNGA_DATA","PUNA_REO_DATA","STEINER_DATA","TE_KURA_DATA","HOME_BASED_DATA","TablePage","ProcessItemPreview","active","ProcessItem","blurb","sections","section","items","item","ProcessGroup","activeItem","setActiveItem","activeItemRef","itemIndex","checklists","checklist","HomePage","CHECKLIST_DATA","ProcessPage","AssistanceType","description","age","hours","qualifications","qualification","FinancialHelpPage","ASSISTANCETYPE_DATA","App","basename","path","component","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.72435d57.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nexport default function Layer(props) {\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  const toggleMoreInfo = () => {\n    setIsExpanded(!isExpanded);\n  };\n  const moreInfoClasses = classNames(\n    'more-info__content',\n    'pl-5',\n    isExpanded ? 'block' : 'hidden'\n  );\n  const iconClasses = classNames(\n    'fas',\n    'pr-2',\n    isExpanded ? 'fa-minus' : 'fa-plus'\n  );\n\n  const removeWhitespaces = (string) => string.replace(/ /g, '');\n\n  return (\n    <fieldset className=\"pt-4\">\n      {\n        props.text\n        && (\n          <div className=\"pb-5 text-section\" dangerouslySetInnerHTML={{ __html: props.text }} />\n        )\n      }\n      {\n        props.question && (\n          <div>\n            <legend className=\"w-auto d-inline h3\">{props.question}</legend>\n          </div>\n        )\n      }\n      {\n        props.question_details && (\n          <div className=\"pb-5 question-details-section\" dangerouslySetInnerHTML={{ __html: props.question_details }} />\n        )\n      }\n      <div className=\"more-info-section\">\n        { props.moreInfo.preview\n          && (\n            <button\n              type=\"button\"\n              className=\"more-info__button ml-5 py-3\"\n              aria-expanded={isExpanded}\n              onClick={() => toggleMoreInfo()}\n            >\n              <i className={iconClasses} />\n              { props.moreInfo.preview }\n            </button>\n          )}\n        <div className={moreInfoClasses}>\n          <p dangerouslySetInnerHTML={{ __html: props.moreInfo.fullText }} />\n        </div>\n      </div>\n      <div className=\"row\">\n        {\n          props.answers.map((answer, index) => (\n            <div className=\"position-relative col-lg-3 col-md-4 mb-2 col-12\" key={answer.answer}>\n              <input\n                type=\"radio\"\n                id={`${removeWhitespaces(answer.answer)}-${props.layerCount}-${props.index}`}\n                name={props.layerCount}\n                value={index}\n                onClick={() => props.onClick(answer, props.index)}\n                className=\"answer\"\n              />\n              <label htmlFor={`${removeWhitespaces(answer.answer)}-${props.layerCount}-${props.index}`} className=\"answer__label\">\n                <span className=\"answer__inner\">\n                  {answer.answer}\n                </span>\n              </label>\n              <span className=\"radio-custom\" />\n            </div>\n          ))\n        }\n      </div>\n    </fieldset>\n  );\n}\n\nLayer.defaultProps = {\n  question: '',\n  text: '',\n  question_details: '',\n  moreInfo: {}\n};\n\nLayer.propTypes = {\n  question: PropTypes.string,\n  moreInfo: PropTypes.shape({\n    preview: PropTypes.string,\n    fullText: PropTypes.string\n  }),\n  text: PropTypes.string,\n  question_details: PropTypes.string,\n  answers: PropTypes.arrayOf(PropTypes.object).isRequired,\n  index: PropTypes.number.isRequired,\n  onClick: PropTypes.func.isRequired,\n  layerCount: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport './external-link.scss';\n\nexport default function ExternalLink(props) {\n  const linkClasses = classNames(\n    'external-link',\n    props.class\n  );\n  return (\n    <span>\n      {' '}\n      <a\n        href={props.href}\n        className={linkClasses}\n        title=\"Open external link\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        style={{\"whiteSpace\": \"nowrap\"}}\n      >\n        {props.text}\n      </a>\n      <span className=\"sr-only\">\n        (external link)\n      </span>\n      {' '}\n    </span>\n  );\n}\n\nExternalLink.defaultProps = {\n  class: ''\n};\n\nExternalLink.propTypes = {\n  href: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  class: PropTypes.string\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ExternalLink from '../external-link/external-link';\n\nexport default function Option(props) {\n  return (\n    <div className=\"option\" id={props.id}>\n      {\n        props.heading && (\n          <h3 className=\"option__heading\">{props.heading}</h3>\n        )\n      }\n      {\n        props.text && (\n          <p className=\"option__text\" dangerouslySetInnerHTML={{ __html: props.text }} />\n        )\n      }\n      {\n        props.conditions.length >= 1 && (\n          <ul className=\"option__conditions\">\n            {\n              props.conditions.map((condition, index) => (\n                <li key={index}>\n                  <p dangerouslySetInnerHTML={{ __html: condition }} />\n                </li>\n              ))\n            }\n          </ul>\n        )\n      }\n      {\n        props.links.length >= 1\n        && (\n          <ul className=\"option__links\">\n            {props.links.map((link, index) => (\n              <li key={index}>\n                <p>\n                  <ExternalLink href={link.href} text={link.text} />\n                </p>\n              </li>\n            ))}\n          </ul>\n        )\n      }\n    </div>\n  );\n}\n\nOption.defaultProps = {\n  heading: '',\n  text: '',\n  links: [],\n  conditions: [],\n  id: ''\n};\n\nOption.propTypes = {\n  heading: PropTypes.string,\n  text: PropTypes.string,\n  links: PropTypes.arrayOf(PropTypes.object),\n  conditions: PropTypes.arrayOf(PropTypes.string),\n  id: PropTypes.string\n};\n","export default function idSafeString(string) {\n  return string.replace(/[ ()']/g, '');\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ExternalLink from '../external-link/external-link';\nimport Option from '../option/option';\nimport idSafeString from '../utils/idSafeString';\n\nexport default function Result(props) {\n  return (\n    <div className=\"result\" id={`result-${props.id}`}>\n      {\n        props.text && (\n          <p dangerouslySetInnerHTML={{ __html: props.text }} />\n        )\n      }\n      {\n        props.conditions.length >= 1\n        && (\n          <div className=\"result__conditions\">\n            <ul>\n              {props.conditions.map((condition, index) => (\n                <li key={index}>\n                  <p dangerouslySetInnerHTML={{ __html: condition }} />\n                </li>\n              ))}\n            </ul>\n          </div>\n        )\n      }\n      {\n        props.links.length >= 1\n        && (\n          <ul className=\"result__links\">\n            {props.links.map((link, index) => (\n              <li key={index}>\n                <p>\n                  <ExternalLink href={link.href} text={link.text} />\n                </p>\n              </li>\n            ))}\n          </ul>\n        )\n      }\n      {\n        props.options.length >= 1 && (\n          <div className=\"result__options\">\n            {props.options.map((option) => (\n              <Option\n                heading={option.heading}\n                text={option.text}\n                links={option.links}\n                conditions={option.conditions}\n                id={`result-option-${idSafeString(option.heading)}`}\n              />\n            ))}\n          </div>\n        )\n      }\n    </div>\n  );\n}\n\nResult.defaultProps = {\n  links: [],\n  conditions: [],\n  options: [],\n  text: '',\n  id: ''\n};\n\nResult.propTypes = {\n  text: PropTypes.string,\n  links: PropTypes.arrayOf(PropTypes.object),\n  conditions: PropTypes.arrayOf(PropTypes.string),\n  options: PropTypes.arrayOf(PropTypes.object),\n  id: PropTypes.string\n};\n","import React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDebouncedCallback } from 'use-debounce';\nimport smoothscroll from 'smoothscroll-polyfill';\n\nimport Layer from '../layer/layer';\nimport Result from '../result/result';\nimport idSafeString from '../utils/idSafeString';\n\nimport './decision-tree.scss';\n\nexport default function DecisionTree(props) {\n  const [selectedAnswers, setSelectedAnswers] = useState([]);\n  const [layerCount, setLayerCount] = useState(1);\n  const calculatorResultRef = useRef(null);\n  const calculatorRowRef = useRef(null);\n  const [showResults, setShowResults] = useState(false);\n  const [delayShowResults] = useDebouncedCallback(\n    () => {\n      setShowResults(true);\n    },\n    600\n  );\n\n  const handleClick = (answer, layerLevel) => {\n    setLayerCount(layerCount + 1);\n    let newSelectedAnswers = selectedAnswers;\n    if (selectedAnswers.length >= (layerLevel + 1)) {\n      // if this is selecting an answer at an earlier level than what we've already selected\n      // cut out the later level answers and results\n      newSelectedAnswers = selectedAnswers.slice(0, layerLevel);\n      setShowResults(false);\n    }\n    setSelectedAnswers([...newSelectedAnswers, { answer, layerCount }]);\n  };\n\n  const results = selectedAnswers.filter((answer) => (answer.answer.result))\n    .map((a) => a.answer.result);\n\n  if (selectedAnswers.length >= 1 && results.length >= 1) {\n    delayShowResults();\n  }\n\n  const scrollToSection = () => {\n    let whichToScroll = null;\n    let scrollOption = window.innerWidth < 576 ? 'center' : 'nearest';\n    smoothscroll.polyfill();\n\n    if (showResults) {\n      whichToScroll = calculatorResultRef;\n      if (window.innerWidth < 576) scrollOption = 'start';\n    } else if (selectedAnswers.length >= 1) {\n      whichToScroll = calculatorRowRef;\n    }\n    if (whichToScroll !== null && whichToScroll.current !== null) {\n      whichToScroll.current.scrollIntoView({ behaviour: 'smooth', block: scrollOption });\n    }\n  };\n\n  useEffect(scrollToSection, [selectedAnswers, showResults]);\n\n  const concatenateAnswers = () => {\n    const answers = selectedAnswers.map((a) => idSafeString(a.answer.answer));\n    return answers.join('__');\n  };\n\n  return (\n    <div className=\"row decision-tree-wrapper\">\n      <section className=\"col-lg-12 page-section\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <Layer\n                question={props.data.question}\n                answers={props.data.answers}\n                moreInfo={props.data.moreInfo}\n                index={0}\n                onClick={handleClick}\n                layerCount={0}\n                key=\"0\"\n              />\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {\n        selectedAnswers.map((answer, index) => {\n          const isLastItem = index + 1 === selectedAnswers.length;\n          return answer.answer.subquestion\n              && (\n                <section className=\"col-lg-12 page-section\" key={answer.layerCount}>\n                  <div className=\"container\">\n                    <div className=\"row\">\n                      <div className=\"col-12\" ref={isLastItem ? calculatorRowRef : null}>\n                        <Layer\n                          question={answer.answer.subquestion.question}\n                          answers={answer.answer.subquestion.answers}\n                          index={index + 1}\n                          layerCount={answer.layerCount}\n                          onClick={handleClick}\n                          moreInfo={answer.answer.subquestion.moreInfo}\n                          text={answer.answer.subquestion.text}\n                          question_details={answer.answer.subquestion.question_details}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </section>\n              );\n        })\n      }\n\n      <section className=\"col-lg-12 mt-4 pt-4\" aria-live=\"polite\" aria-atomic=\"true\">\n        {\n          showResults && (\n            <div className=\"container\" ref={calculatorResultRef}>\n              {\n                props.resultHeading && (\n                  <h2>{ props.resultHeading }</h2>\n                )\n              }\n              {\n                results.map((result, index) => (\n                  <div className=\"row pb-4\" key={index}>\n                    <div className=\"col-12 mb-4\">\n                      <Result\n                        text={result.text}\n                        links={result.links}\n                        conditions={result.conditions}\n                        options={result.options}\n                        id={concatenateAnswers()}\n                      />\n                    </div>\n                  </div>\n                ))\n              }\n            </div>\n          )\n        }\n      </section>\n      {\n        props.lastUpdated && (\n          <section className=\"col-lg-12 mb-4\">\n            <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"col-12 mb-4\">\n                  <p>\n                    Last updated:\n                    { props.lastUpdated }\n                  </p>\n                </div>\n              </div>\n            </div>\n          </section>\n        )\n      }\n    </div>\n  );\n}\n\nDecisionTree.defaultProps = {\n  lastUpdated: '',\n  resultHeading: ''\n};\n\nDecisionTree.propTypes = {\n  data: PropTypes.shape({\n    question: PropTypes.string,\n    answers: PropTypes.array.isRequired,\n    moreInfo: PropTypes.object\n  }).isRequired,\n  lastUpdated: PropTypes.string,\n  resultHeading: PropTypes.string\n};\n","import React, { useState } from 'react';\n\nimport { NavLink } from \"react-router-dom\";\n\nexport default function NavBar(props) {\n  const [isNavCollapsed, setIsNavCollapsed] = useState(true);\n  const handleNavCollapse = () => setIsNavCollapsed(!isNavCollapsed);\n\n  return(\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-forest\">\n      <NavLink exact to=\"/\" className=\"navbar-brand\" activeClassName=\"active\">Start Well</NavLink>\n      <button className=\"navbar-toggler\"\n              type=\"button\"\n              data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\"\n              aria-controls=\"navbarSupportedContent\"\n              aria-label=\"Toggle navigation\"\n              aria-expanded={!isNavCollapsed ? true : false}\n              onClick={handleNavCollapse}>\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n\n      <div className={`${isNavCollapsed ? 'collapse' : ''} navbar-collapse`} id=\"navbarSupportedContent\">\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <NavLink to=\"/decision-tree\" className=\"nav-link\" activeClassName=\"active\">Select an ECE Type</NavLink>\n          </li>\n          <li className=\"nav-item\">\n            <NavLink to=\"/table\" className=\"nav-link\" activeClassName=\"active\">ECE Comparison</NavLink>\n          </li>\n          <li className=\"nav-item\">\n            <NavLink to=\"/financial-help\" className=\"nav-link\" activeClassName=\"active\">Financial help</NavLink>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  )\n}\n","import React from 'react';\nimport DecisionTree from '../components/decision-tree/decision-tree';\nimport NavBar from '../components/navbar/navbar';\n\nimport DECISIONTREE_DATA from '../data/decision-tree.json';\n\nfunction DecisionTreePage() {\n  return (\n    <div>\n      <NavBar />\n      <div className=\"container py-4\">\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <h1 className=\"mb-4\">What type of early learning service is right for you?</h1>\n            <p>Unsure which type of ELS will best suit your needs and the needs of your child and whānau? Simply select your preferred scenarios below and see what type of ELS we suggest might work for you.</p>\n            <p>  </p>\n          </div>\n        </div>\n        <DecisionTree\n          data={DECISIONTREE_DATA}\n          resultHeading={\"Based on your results...\"}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default DecisionTreePage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './ages-icon.scss';\n\nexport default function AgesIcon(props) {\n  const inRange = (number, range) => {\n    return(range && (range.from <= number) && (range.to >= number))\n  }\n\n  return (\n    <div className=\"ages-circle__container scale-small pt-4 pr-2 pl-0\">\n      {\n        [0,1,2,3,4,5,6].map(startAge => (\n          <span\n            className={`ages-circle ages-circle--${inRange(startAge, props.data.always) ? 'always' : (inRange(startAge, props.data.sometimes) ? 'sometimes' : 'never')}`}\n          >\n          </span>\n        ))\n      }\n    </div>\n  )\n}\n\nAgesIcon.defaultProps = {\n  data: {}\n};\n\nAgesIcon.propTypes = {\n  data: PropTypes.shape({\n    always: PropTypes.shape({\n      from: PropTypes.number,\n      to: PropTypes.number\n    }),\n    sometimes: PropTypes.shape({\n      from: PropTypes.number,\n      to: PropTypes.number\n    })\n  })\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './cost-icon.scss';\n\nexport default function CostIcon(props) {\n  const inRange = (number, range) => {\n    return(range && (range.from <= number) && (range.to >= number))\n  }\n\n  return (\n    <div className=\"cost-icon__container\">\n      {\n        [1,2,3,4,5].map(costLevel => (\n          <span\n            className={`cost-icon cost-icon--${inRange(costLevel, props.data.always) ? 'always' : (inRange(costLevel, props.data.sometimes) ? 'sometimes' : 'never')}`}\n          >\n            $\n          </span>\n        ))\n      }\n    </div>\n  )\n}\n\nCostIcon.defaultProps = {\n  always: {},\n  sometimes: {}\n};\n\n// rating of 0-5\nCostIcon.propTypes = {\n  data: PropTypes.shape({\n    always: PropTypes.shape({\n      from: PropTypes.number,\n      to: PropTypes.number\n    }),\n    sometimes: PropTypes.shape({\n      from: PropTypes.number,\n      to: PropTypes.number\n    })\n  })\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './language-icon.scss';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faComment } from '@fortawesome/free-solid-svg-icons'\n\nexport default function LanguageIcon(props) {\n  const baseSize = 3;\n  return (\n    <div className=\"language-icon__container\">\n      {\n        props.data.languages.map((language, index) => (\n          <div className={`language-icon language-icon--${index}`}>\n            <span className=\"language-icon__bubble\">\n              <FontAwesomeIcon icon={faComment} style={{\"fontSize\": `${(baseSize*language.proportion)}em`}} />\n            </span>\n            <span className=\"language-icon__name\">\n              {language.name}\n            </span>\n          </div>\n        ))\n      }\n    </div>\n  )\n}\n\nLanguageIcon.propTypes = {\n  data: PropTypes.shape({\n    languages: PropTypes.array\n  }).isRequired\n};\n\n// [{ \"name\": \"nz-mi\", \"proportion\": \"0.8\" }, { \"name\": \"nz-en\", \"proportion\": \"0.2\" }]\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './number-of-centres-icon.scss';\n\nexport default function NumberOfCentresIcon(props) {\n  return (\n    <div className=\"number-of-centres-icon\">\n      <span className=\"number-of-centres-icon__number\">\n        {props.data.number}\n      </span>\n    </div>\n  )\n}\n\nNumberOfCentresIcon.propTypes = {\n  data: PropTypes.shape({\n    number: PropTypes.string\n  }).isRequired\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './parent-involvement-icon.scss';\n\nexport default function ParentInvolvementIcon(props) {\n  const inRange = (number, minimum) => {\n    return(minimum && minimum >= number)\n  }\n\n  return (\n    <div className=\"involvement-icon__container\">\n      {\n        [100,80,60,40,20,0].map(involvementLevel => (\n          <span\n            className={`involvement-icon involvement-icon--${inRange(involvementLevel, props.data.always.minimum_percent) ? 'always' : (inRange(involvementLevel, props.data.sometimes.minimum_percent) ? 'sometimes' : 'never')}`}\n          >\n          </span>\n        ))\n      }\n    </div>\n  )\n}\n\nParentInvolvementIcon.propTypes = {\n  data: PropTypes.shape({\n    always: PropTypes.shape({\n      minimum_percent: PropTypes.number\n    }),\n    sometimes: PropTypes.shape({\n      minimum_percent: PropTypes.number\n    })\n  }).isRequired\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './session-length-icon.scss';\n\nexport default function SessionLengthIcon(props) {\n  const outerDiameter = 70;\n\n  const getSectorPath = (x, y, outerDiameter, a1, a2) => {\n    const degtorad = Math.PI / 180;\n    const halfOuterDiameter = outerDiameter / 2;\n    const cr = halfOuterDiameter - 5;\n    const cx1 = (Math.cos(degtorad * a2) * cr) + x;\n    const cy1 = (-Math.sin(degtorad * a2) * cr) + y;\n    const cx2 = (Math.cos(degtorad * a1) * cr) + x;\n    const cy2 = (-Math.sin(degtorad * a1) * cr) + y;\n\n    return \"M\" + x + \" \" + y + \" \" + cx1 + \" \" + cy1 + \" A\" + cr + \" \" + cr + \" 0 0 1 \" + cx2 + \" \" + cy2 + \"Z\";\n  }\n\n  const startDegreeForHour = (hour) => (\n    60 - (hour * (360/12))\n  )\n\n  const endDegreeForHour = (hour) => (\n    startDegreeForHour(hour) + (360/12)\n  )\n\n  const inRange = (number, range) => {\n    return(range && (range.from <= number) && (range.to >= number))\n  }\n\n  return (\n    <div>\n      <svg width={outerDiameter} height={outerDiameter}>\n      {\n        [0,1,2,3,4,5,6,7,8,9,10,11].map(startHour => (\n          <path\n            d={getSectorPath(outerDiameter / 2, outerDiameter / 2, outerDiameter, startDegreeForHour(startHour), endDegreeForHour(startHour))}\n            className={`session-length-icon session-length-icon--${inRange(startHour, props.data.always) ? 'always' : (inRange(startHour, props.data.sometimes) ? 'sometimes' : 'never')}`}\n            id={`session-${startHour}-${startDegreeForHour(startHour)}__${endDegreeForHour(startHour)}`}\n            />\n        ))\n      }\n      </svg>\n    </div>\n  )\n}\n\nSessionLengthIcon.propTypes = {\n  data: PropTypes.shape({\n    always: PropTypes.shape({\n      from: PropTypes.number,\n      to: PropTypes.number\n    }),\n    sometimes: PropTypes.shape({\n      from: PropTypes.number,\n      to: PropTypes.number\n    })\n  }).isRequired\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './teacher-qualifications-icon.scss';\n\nexport default function TeacherQualificationsIcon(props) {\n  return (\n    <div className=\"teacher-qualifications-icon__container\">\n      {\n        [100,90,80,70,60,50,40,30,20,10,0].map(qualificationLevel => (\n          <span\n            className={`teacher-qualifications-icon teacher-qualifications-icon--${(qualificationLevel <= props.data.always.minimum_percent_qualified) ? 'always' : (props.data.sometimes && qualificationLevel <= props.data.sometimes.minimum_percent_qualified ? 'sometimes' : 'never')}`}>\n          </span>\n        ))\n      }\n    </div>\n  )\n}\n\nTeacherQualificationsIcon.propTypes = {\n  data: PropTypes.shape({\n    always: PropTypes.shape({\n      minimum_percent_qualified: PropTypes.number\n    }),\n    sometimes: PropTypes.shape({\n      minimum_percent_qualified: PropTypes.number\n    })\n  }).isRequired\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport AgesIcon from '../ece-attribute-icons/ages-icon';\nimport CostIcon from '../ece-attribute-icons/cost-icon';\nimport LanguageIcon from '../ece-attribute-icons/language-icon';\nimport NumberOfCentresIcon from '../ece-attribute-icons/number-of-centres-icon';\nimport ParentInvolvementIcon from '../ece-attribute-icons/parent-involvement-icon';\nimport SessionLengthIcon from '../ece-attribute-icons/session-length-icon';\nimport TeacherQualificationsIcon from '../ece-attribute-icons/teacher-qualifications-icon';\n\nexport default function EceAttribute(props) {\n  const typeMap = {\n    ages: {heading: \"Ages\", icon: AgesIcon},\n    cost: {heading: \"Cost\", icon: CostIcon},\n    language: {heading: \"Language\", icon: LanguageIcon},\n    \"number-of-centres\": {heading: \"Number of centres in New Zealand\", icon: NumberOfCentresIcon},\n    \"parent-involvement\": {heading: \"Expectations of you and your whānau\", icon: ParentInvolvementIcon},\n    \"session-length\": {heading: \"Session length\", icon: SessionLengthIcon},\n    \"teacher-qualifications\": {heading: \"Teacher qualifications\", icon: TeacherQualificationsIcon}\n  }\n\n  const mappedType = typeMap[props.type]\n\n  return (\n    <div className=\"row mb-3\">\n      <div className=\"col-1\">\n        <div className=\"d-flex justify-content-center\">\n          { <mappedType.icon data={props.data} /> }\n        </div>\n      </div>\n      <div className=\"col-11\">\n        <p>\n          <span className=\"font-weight-bold\">{ mappedType.heading }: </span>\n          { props.text }\n        </p>\n      </div>\n    </div>\n  )\n}\n\nEceAttribute.defaultProps = {\n  heading: '',\n  text: ''\n};\n\nEceAttribute.propTypes = {\n  type: PropTypes.string.isRequired,\n  data: PropTypes.object.isRequired,\n  text: PropTypes.string\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport EceAttribute from '../ece-attribute/ece-attribute';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\n\nexport default function EceType(props) {\n  return (\n    <div className=\"card\">\n      <div className=\"card-header d-flex justify-content-between align-items-center\">\n        <h2>{props.data.title}</h2>\n        <FontAwesomeIcon icon={faTimes} onClick={()=>props.handleClick(null)} />\n      </div>\n      <div className=\"card-body\">\n        <p>{props.data.text}</p>\n        <div className=\"small\">\n          {\n            props.data.attributes.map((attribute, index) => (\n              <EceAttribute type={attribute.type}\n                            data={attribute.data}\n                            text={attribute.text}\n                            key={`${props.title}-${attribute.type}`}/>\n            ))\n          }\n        </div>\n      </div>\n    </div>\n  )\n}\n\nEceType.defaultProps = {\n  handleClick: null\n}\n\nEceType.propTypes = {\n  data: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    text: PropTypes.string,\n    attributes: PropTypes.array,\n    links: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired,\n  handleClick: PropTypes.func\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './level.scss';\n\nexport default function Level(props) {\n  const inRange = (number, range) => {\n    return(range && (range.from <= number) && (range.to >= number))\n  }\n\n  return (\n    props.data.always ? (\n      <div className=\"level__container\">\n        {\n          [5,4,3,2,1].map(level => (\n            <span\n              className={`level level--${inRange(level, props.data.always) ? 'always' : (inRange(level, props.data.sometimes) ? 'sometimes' : 'never')}`}\n            >\n            </span>\n          ))\n        }\n      </div>\n    )\n    : (\n      <span></span>\n    )\n  )\n}\n\n// rating of 0-5\nLevel.propTypes = {\n  data: PropTypes.shape({\n    always: PropTypes.shape({\n      from: PropTypes.number,\n      to: PropTypes.number\n    }),\n    sometimes: PropTypes.shape({\n      from: PropTypes.number,\n      to: PropTypes.number\n    })\n  })\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ExternalLink from '../external-link/external-link';\nimport Level from '../level/level';\nimport { Tooltip } from 'antd';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheckCircle, faTimesCircle, faQuestionCircle, faMinusCircle } from '@fortawesome/free-solid-svg-icons'\n\nexport default function ComparisonCell(props) {\n  const valueMap = {\n    true: {color: \"green\", icon: faCheckCircle},\n    false: {color: \"red\", icon: faTimesCircle},\n    partial: {color: \"yellow\", icon: faMinusCircle},\n    unknown: {color: \"orange\", icon: faQuestionCircle}\n  }\n  const mappedValue = valueMap[props.value]\n\n  return (\n    <div className=\"d-flex  flex-column justify-content-center\">\n      <div className=\"d-inline-flex align-items-center\">\n        {\n          props.level && (\n            <Level data={ props.level } />\n          )\n        }\n        {\n          props.value && (\n            <FontAwesomeIcon icon={ mappedValue.icon } color={`var(--${mappedValue.color})`} className=\"mb-1\" />\n          )\n        }\n        <div>\n          {\n            props.notes && (\n              <div className=\"w-10\">\n                <Tooltip title={ props.notes }>\n                  <sup className=\"\">&nbsp;*</sup>\n                </Tooltip>\n              </div>\n            )\n          }\n        </div>\n      </div>\n      <div>\n        {\n          props.text && (\n            <small>{ props.text }</small>\n          )\n        }\n      </div>\n      {\n        props.links && (\n          <div className=\"small\">\n            {\n              props.links.map((link, index) => (\n                <ExternalLink href={ link.href } text={ link.text } key={ `${link.href}-${link.text}` } />\n              ))\n            }\n          </div>\n        )\n      }\n    </div>\n  )\n}\n\nComparisonCell.defaultProps = {\n  notes: '',\n  value: '',\n  text: '',\n  links: [],\n  level: {}\n};\n\nComparisonCell.propTypes = {\n  level: PropTypes.object,\n  value: PropTypes.string,\n  notes: PropTypes.string,\n  links: PropTypes.array,\n  text: PropTypes.string\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Table } from 'antd';\nimport ComparisonCell from '../comparison-cell/comparison-cell'\n\nimport TABLE_DATA from '../../data/table-data.json';\n\nimport './comparison-table.scss';\n\nexport default function ComparisonTable(props) {\n  const columnsWithRenderFunctions = (data) => {\n    return data.map((column, index) => {\n      let render_text = (text) => (text)\n      let render_comparison_cell = (values) => (\n        values && (\n        <ComparisonCell value = { values.value }\n                        text = { values.text }\n                        notes = { values.notes }\n                        links = { values.links }\n                        level = { values.level }\n        />\n        )\n      )\n      return {\n        key: column.key,\n        dataIndex: column.key,\n        fixed: column.fixed,\n        width: column.width,\n        title: (column.title && <div className={`clickable h-100 text-center ${column.key === props.selectedType ? 'active' : ''}`} onClick={() => (props.handleClick(column.key))}>{column.title}</div>),\n        render: (values) => (\n          typeof(values) === \"string\" ? render_text(values) : render_comparison_cell(values)\n        )\n      }\n    })\n  }\n\n  return (\n    <Table\n      columns={ columnsWithRenderFunctions(TABLE_DATA.columns) }\n      dataSource={ TABLE_DATA.rows }\n      scroll={{ x: 800, y: 400 }}\n      pagination={false}\n      size=\"small\"\n    />\n  )\n}\n\nComparisonTable.defaultProps = {\n  selectedType: null\n}\n\nComparisonTable.propTypes = {\n  data: PropTypes.shape({\n    types: PropTypes.object.isRequired,\n    attributes: PropTypes.array.isRequired,\n    categories: PropTypes.array.isRequired\n  }).isRequired,\n  handleClick: PropTypes.func.isRequired,\n  selectedType: PropTypes.string\n};\n","import React, { useState, useRef, useEffect } from 'react';\nimport smoothscroll from 'smoothscroll-polyfill';\n\nimport EceType from '../ece-type/ece-type';\nimport ComparisonTable from '../comparison-table/comparison-table';\n\nimport TABLE_DATA from '../../data/table-data.json';\n\nimport KINDY_DATA from '../../data/ece-types/kindergarten.json';\nimport KOHANGA_DATA from '../../data/ece-types/kohanga.json';\nimport AKOTEU_DATA from '../../data/ece-types/akoteu.json';\nimport AOGA_DATA from '../../data/ece-types/aoga.json';\nimport HOME_BASED_DATA from '../../data/ece-types/home-based.json';\nimport EDUCATION_AND_CARE_DATA from '../../data/ece-types/education-and-care.json';\nimport MONTESSORI_DATA from '../../data/ece-types/montessori.json';\nimport PLAYCENTRE_DATA from '../../data/ece-types/playcentre.json';\nimport PLAYGROUP_DATA from '../../data/ece-types/playgroup.json';\nimport PUNA_KOHUNGAHUNGA_DATA from '../../data/ece-types/puna-kohungahunga.json';\nimport PUNA_REO_DATA from '../../data/ece-types/puna-reo.json';\nimport STEINER_DATA from '../../data/ece-types/steiner.json';\nimport TE_KURA_DATA from '../../data/ece-types/te-kura.json';\n\nexport default function Tupac() {\n  const [selectedType, setSelectedType] = useState(null);\n  const selectedTypeRef = useRef(null);\n\n  const handleClick = (type) => {\n    setSelectedType(type);\n  };\n\n  const scrollToSection = () => {\n    console.log(window.innerWidth)\n    smoothscroll.polyfill();\n    if(selectedTypeRef.current !== null && window.innerWidth < 700) {\n      selectedTypeRef.current.scrollIntoView({ behaviour: 'smooth', block: 'start' });\n    }\n  };\n\n  useEffect(scrollToSection, [selectedType]);\n\n  const eceTypeData = {\n    \"kindergarten\": KINDY_DATA,\n    \"kohanga\": KOHANGA_DATA,\n    \"akoteu\": AKOTEU_DATA,\n    \"aoga\": AOGA_DATA,\n    \"education_and_care\": EDUCATION_AND_CARE_DATA,\n    \"montessori\": MONTESSORI_DATA,\n    \"playcentre\": PLAYCENTRE_DATA,\n    \"playgroup\": PLAYGROUP_DATA,\n    \"puna_kōhungahunga\": PUNA_KOHUNGAHUNGA_DATA,\n    \"puna_reo\": PUNA_REO_DATA,\n    \"steiner\": STEINER_DATA,\n    \"te_kura\": TE_KURA_DATA,\n    \"home_based\": HOME_BASED_DATA\n  }\n\n  return (\n    <div className=\"container-fluid pl-0\">\n      <div className=\"row\">\n        <div className={ selectedType ? 'col-lg-8 col-md-12 pl-0' : 'col-12 pl-0' }>\n          <ComparisonTable\n            data={TABLE_DATA}\n            handleClick={ handleClick }\n            selectedType={selectedType}/>\n        </div>\n        {\n          selectedType && (\n            <div className=\"col-lg-4 col-md-12\" ref={ selectedTypeRef }>\n              <EceType\n                data={ eceTypeData[selectedType] }\n                handleClick={ handleClick }\n              />\n            </div>\n          )\n        }\n      </div>\n    </div>\n  )\n}\n","import React from 'react';\nimport NavBar from '../components/navbar/navbar';\nimport Tupac from '../components/tupac/tupac';\n\nfunction TablePage() {\n  return (\n    <div>\n      <NavBar />\n      <div className=\"container-fluid px-4 mt-4 overflow-hidden\">\n        <div className=\"row\">\n          <div className=\"col-lg-12\">\n            <h1 className=\"mb-4\">Comparison table</h1>\n            <p>This table provides an overview of what different services offer so you can easily compare features at a glance. Click on a service type to learn more about it.</p>\n            <Tupac />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default TablePage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './process-item-preview.scss';\n\nexport default function ProcessItemPreview(props) {\n  return (\n    <li className={`nav-item process-item-preview process-item-preview--${props.index}`} onClick={ () => props.onClick(props.index) }>\n      <span className={`nav-link clickable mb-1 ${props.active && 'active'}`}>\n        {props.data.title}\n      </span>\n    </li>\n  )\n}\n\nProcessItemPreview.propTypes = {\n  data: PropTypes.shape({\n    title: PropTypes.string,\n    blurb: PropTypes.string\n  }).isRequired,\n  index: PropTypes.number.isRequired,\n  onClick: PropTypes.func.isRequired,\n  active: PropTypes.bool.isRequired\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './process-item.scss';\n\nexport default function ProcessItem(props) {\n  return (\n    <div id={props.id}>\n      <h3>{ props.data.title }</h3>\n      <p className=\"lead\">{ props.data.blurb }</p>\n      {\n        props.data.sections && props.data.sections.map((section, index) => (\n          <div key={ section.heading }>\n            <h5>{section.heading}</h5>\n            <p key={ section.text } dangerouslySetInnerHTML={{ __html: section.text }} />\n            {\n              section.items && (\n                <ul>\n                {\n                  section.items.map((item, index) => (\n                    <li key={ item } dangerouslySetInnerHTML={{ __html: item }} />\n                  ))\n                }\n                </ul>\n              )\n            }\n          </div>\n        ))\n      }\n    </div>\n  )\n}\n\nProcessItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  data: PropTypes.shape({\n    title: PropTypes.string,\n    blurb: PropTypes.string,\n    lists: PropTypes.array,\n    links: PropTypes.array,\n    sections: PropTypes.array\n  }).isRequired\n};\n","import React, { useState, useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport ProcessItemPreview from '../process-item-preview/process-item-preview';\nimport ProcessItem from '../process-item/process-item';\nimport smoothscroll from 'smoothscroll-polyfill';\n\nimport './process-group.scss';\n\nexport default function ProcessGroup(props) {\n\n  const [activeItem, setActiveItem] = useState(null);\n  const activeItemRef = useRef(null);\n\n  const handleClick = (itemIndex) => {\n    setActiveItem(itemIndex);\n  };\n\n  const scrollToSection = () => {\n    smoothscroll.polyfill();\n    if(activeItemRef.current !== null) {\n      activeItemRef.current.scrollIntoView({ behaviour: 'smooth', block: 'start' });\n    }\n  };\n\n  useEffect(scrollToSection, [activeItem]);\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-md-3 col-12 align-items-stretch\">\n        <ul className=\"nav nav-pills flex-column sticky-top\">\n          {\n            props.checklists.map((checklist, index) => (\n              <ProcessItemPreview\n                data={ checklist }\n                index={ index }\n                onClick={ handleClick }\n                active={ index === activeItem }\n                key={ checklist.title }\n              />\n            ))\n          }\n        </ul>\n      </div>\n      <div className=\"col-md-9 col-12\">\n      {\n        props.checklists.map((checklist, index) => (\n          <div ref={index === activeItem ? activeItemRef : null} className=\"process-item\">\n            <ProcessItem\n              data={ checklist }\n              key={ `process-item-${index}` }\n              id={ `process-item-${index}` }\n            />\n          </div>\n        ))\n      }\n      </div>\n    </div>\n  )\n}\n\nProcessGroup.propTypes = {\n  checklists: PropTypes.array.isRequired\n};\n","import React from 'react';\nimport ProcessGroup from '../components/process-group/process-group';\nimport NavBar from '../components/navbar/navbar';\n\nimport CHECKLIST_DATA from '../data/checklist-data.json';\n\nfunction HomePage() {\n  return (\n    <div>\n      <NavBar />\n      <div className=\"container mt-4\">\n        <div className=\"row mb-4\">\n          <div className=\"col-12\">\n            <h1 className=\"mb-4\">How do we sign up for an early learning service?</h1>\n            <p>Finding an early learning service can be a tricky journey to begin but is ultimately incredibly rewarding for your whole family. On this site, you will learn about the process to follow for enrolment, the types of service that you can choose from and their similarities/differences, and see what financial support you can receive from the government. </p>\n          </div>\n        </div>\n        <ProcessGroup checklists={ CHECKLIST_DATA } />\n      </div>\n    </div>\n  );\n}\n\nexport default HomePage;\n","import React from 'react';\nimport ProcessGroup from '../components/process-group/process-group';\nimport NavBar from '../components/navbar/navbar';\n\nimport CHECKLIST_DATA from '../data/checklist-data.json';\n\nfunction ProcessPage() {\n  return (\n    <div>\n      <NavBar />\n      <div className=\"container mt-4\">\n        <div className=\"row mb-4\">\n          <div className=\"col-12\">\n            <h1 className=\"mb-4\">How do we sign up for an early learning service?</h1>\n            <p>Not sure where to start? It is heres.</p>\n          </div>\n        </div>\n        <ProcessGroup checklists={ CHECKLIST_DATA } />\n      </div>\n    </div>\n  );\n}\n\nexport default ProcessPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ExternalLink from '../external-link/external-link';\n\nimport './assistance-type.scss';\n\nexport default function AssistanceType(props) {\n  return (\n    <div id={props.id} className=\"card mb-1\">\n      <h3 className=\"card-header\">{ props.data.title }</h3>\n      <div className=\"card-body\">\n        <div className=\"list-group list-group-flush\">\n          {\n            props.data.description && (\n              <p className=\"lead\">{ props.data.description }</p>\n            )\n          }\n          {\n            props.data.ages && (\n              <li class=\"list-group-item\">\n              <h4>Ages</h4>\n              {\n                props.data.ages.map((age, index) => (\n                  <dl>\n                  <dt>From</dt>\n                  <dd>{age.from}</dd>\n                  <dt>To</dt>\n                  <dd>{age.to}</dd>\n                  <dt>Hours</dt>\n                  <dd>{age.hours}</dd>\n                  {\n                    age.notes && (\n                      <div>\n                      <dt>Notes</dt>\n                      <dd>{age.notes}</dd>\n                      </div>\n                    )\n                  }\n                  </dl>\n                ))\n              }\n              </li>\n            )\n          }\n          {\n            props.data.qualifications && (\n              <li className=\"list-group-item\">\n                <h4>Qualifications</h4>\n                <ul>\n                  {\n                    props.data.qualifications.map((qualification) => (\n                      <li>{qualification}</li>\n                    ))\n                  }\n                </ul>\n              </li>\n            )\n          }\n          {\n            props.links && (\n              <ul>\n                {\n                  props.links.map((link, index) => (\n                    <li>\n                      <ExternalLink href={ link.href } text={ link.text } key={ `${link.href}-${link.text}` } />\n                    </li>\n                  ))\n                }\n              </ul>\n            )\n          }\n        </div>\n      </div>\n    </div>\n  )\n}\n\nAssistanceType.propTypes = {\n  id: PropTypes.string.isRequired,\n  data: PropTypes.shape({\n    title: PropTypes.string,\n    description: PropTypes.string,\n    qualifications: PropTypes.array,\n    ages: PropTypes.array,\n    links: PropTypes.array\n  }).isRequired\n};\n","import React from 'react';\nimport NavBar from '../components/navbar/navbar';\nimport AssistanceType from '../components/assistance-type/assistance-type';\n\nimport ASSISTANCETYPE_DATA from '../data/assistance-types.json';\n\nfunction FinancialHelpPage() {\n  return (\n    <div>\n      <NavBar />\n      <div className=\"container py-4\">\n        <h1 className=\"mb-4\">What financial help could you get?</h1>\n        <p>Explore this page to find out what financial assistance you may be eligible for to help get your child into an ECE.</p>\n        <div className=\"row\">\n          {\n            ASSISTANCETYPE_DATA.map((type, index) => (\n              <div className=\"col-4\">\n                <AssistanceType data={type} />\n              </div>\n            ))\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default FinancialHelpPage;\n","import React from 'react';\n\nimport { HashRouter, Route } from \"react-router-dom\";\n\nimport DecisionTreePage from './pages/decision-tree'\nimport TablePage from './pages/table'\nimport HomePage from './pages/home'\nimport ProcessPage from './pages/process'\nimport FinancialHelpPage from './pages/financial-help'\nimport 'antd/dist/antd.css';\n\nimport './App.scss';\n\nfunction App() {\n  return (\n    <HashRouter basename='/'>\n      <Route exact path=\"/\" component={HomePage} />\n      <Route path=\"/decision-tree\" component={DecisionTreePage} />\n      <Route path=\"/table\" component={TablePage} />\n      <Route path=\"/process\" component={ProcessPage} />\n      <Route path=\"/financial-help\" component={FinancialHelpPage} />\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}